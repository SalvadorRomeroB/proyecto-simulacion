{"version":3,"sources":["services/kolmogorovSmirnov.js","components/header.js","components/typeSelector.js","components/algoritmos/algoritmoCuadradosMedios.js","components/algoritmos/algoritmoMultiplicadorConstante.js","components/algoritmos/algoritmoLineal.js","components/algoritmos/algortimoCongruencialMultiplicativo.js","components/algoritmos/algortimoCongruencialAditivo.js","components/algoritmos/algortimoCongruencialCuadratico.js","components/algoritmos/algoritmoProductosMedios.js","components/pruebas/pruebaDistChiCuad.js","components/pruebas/pruebaVarianza.js","components/pruebas/pruebaUniformidadChiCuadrada.js","components/pruebas/pruebaHuecos.js","components/pruebas/pruebaIndCorrArrAbMed.js","components/pruebas/pruebaIndepCorrArrAb.js","components/pruebas/pruebaKolSmir.js","components/pruebas/pruebaMedias.js","components/pruebas/pruebaPoker.js","components/pruebas/pruebaSeries.js","components/pruebas/pruebaUniformidadKolSmir.js","components/metodos/metodoConvolucion.js","components/metodos/metodoTransformadaInversa.js","App.js","serviceWorker.js","index.js","services/algorithmFunctions.js"],"names":["table","module","exports","getKormorovSmirnov","alpha","nums","Header","className","TypeSelector","Dropdown","Toggle","Menu","Item","to","AlgoritmoCuadradosMedios","useState","d","setD","seed","setSeed","amount","setAmount","generatedNums","setGeneratedNums","useEffect","seedLength","toString","length","getNumsObj","y","x","r","for","id","type","min","max","value","onChange","e","target","onClick","tempArr","seedSquare","Math","pow","middleSeedValues","modifyNums","getMiddleValues","push","transformToR","i","generateNums","scope","map","AlgoritmoMultiplicadorConstante","a","setA","unvalidA","setUnvalidA","class","role","seedProduct","console","log","AlgoritmoLineal","c","setC","m","setM","divR","parseInt","tempY","toFixed","AlgoritmoCongruencialMultiplicativo","AlgoritmoCongruencialAditivo","seeds","setSeeds","n","setN","currentSeed","setCurrentSeed","index","xi","xi_n","xi_1","tempSeeds","AlgoritmoCongruencialCuadratico","b","setB","x2","x1","AlgoritmoProductosMedios","seed2","setSeed2","seed2Length","PruebaDstrbcnChiCdrd","PruebaVarianza","numbersCSVString","setNumbersCSVString","numbers","setNumbers","acepta","setAcepta","testRun","setTestRun","media","setMedia","setAlpha","limitI","setLimitI","limitS","setLimitS","variance","setVariance","degreeFreed","temp","chiSquareInverse","invChiSquareCDF","reduce","prev","curr","Number","num","parseFloat","split","addCSVValues","sum","calculateMed","PruebaUnidormidadChiCuadrada","chiSum","setChiSum","chiValue","setChiValue","testTable","setTestTable","ei","tempEi","oi","filter","eioisquaredei","interval","eioiei","getObject","calculateUni","PruebaHuecos","minInter","setMinInter","maxInter","setMaxInter","setTable","H","setH","estTotal","setEstTotal","setDisplay","X2","setx2","normalizeList","list","newList","forEach","fillTable","getOi","firstTable","getEi","getEstadistico","firstOne","indexOf","f","h","holes","k","obj","total","htmlFor","normList","calculate","key","PruebaCorrArrAbMed","numeros","setNumeros","N","C0","setC0","N1","setN1","N0","setN0","MC0","setMC0","VariazaC0","setVariazaC0","Z0","setZ0","countSwitch","swithflag","count1","trim","count0","mc0","variazaC0","standardNormalTable","val","z0","abs","sqrt","prueba","PruebaIndepCorrArrAb","rawList","setRawList","corridas","setCorridas","mCo","setMco","chiCoSq","setChicoSq","zo","setZo","size","setSize","inputToList","compareAdjacent","s","calculateCorrida","flag","Co","calcMCO","calcChiCo","calcZo","co","mco","chiCo","PruebaMedias","PruebaPoker","setNums","disable","setDisable","fillAlpha","setFillAlpa","numlist","setnumList","todoDif","unPar","dosPares","unaTercia","terciaPar","poker","quintilla","categories","setCategories","setEi","eiOi","setEiOi","x20","setx20","chi2","setChi2","prob5D","prob3D","prob4D","solve5D","tempCat","dosPar","str","first","second","third","fourth","fifth","all","includes","count","handleClasifications","td","unP","dosP","unT","terciaP","p","q","chisq","placeholder","numberList","noNewLine","replace","noDot","substring","sorted","sort","join","disabled","PruebaSerie","setCuadrants","numbersLength","setNumbersLength","x2Total","setX2Total","calculateSeriesTest","tempM","notFound","ibase2","closestSquareTable","coordinates","xValue","yValue","base","coordX","coordY","range","tableCuadrnts","j","lowerX","higherX","lowerY","higherY","ammountByCuadrant","tempOi","Array","fill","tempx2Vals","tempx2TotalVal","tempTestTable","Kolmogorov","Dmas","setDmas","Dmenos","setDmenos","Dna","setDna","Hipot","setHipot","setNumlist","alert","arr1","arr3","arr4","arr5","d_max","d_min","d_table","d_value","tempAlp","hipot","MetodoConvolucion","distSelected","setDistSelected","distName","setDistName","distFormulaStr","setDistFormulaStr","display","num_erlang","setNum_erlang","media_erlang","setMedia_erlang","cantidad_piezas_erlang","setCantidad_piezas_erlang","setValores_Xi_erlang","erlangResult","setErlangResult","norMedia","setNorMedia","norDS","setNorDS","norRandomN","setNorRandomN","norResults","setNorResults","biProb","setBiProb","biN","setBiN","biDef","setBiDef","num_random","valores_Xi","result","random","multi","rs","calcDistErlang","suma_r","resta_r","tabla","suma","resta","calcDistNormal","error","valores_df","calcDistBinomial","data-toggle","aria-haspopup","aria-expanded","aria-labelledby","MetodoTransformadaInversa","uniVarA","setUniVarA","uniVarBmA","setUniVarBmA","uniResults","setUniResults","expVarDelta","setExpVarDelta","expResults","setExpResults","berVarSuccess","setBerVarSuccess","berResults","setBerResults","poiVarProbSize","setPoiVarProbSize","poiVarDelta","setPoiVarDelta","poiResults","setPoiResults","factorial","rval","findInProbTable","needle","prevAcum","acum","calcDistPoisson","acumPx","px","exp","getProbabilityForPoisson","tempPoissonResults","ri","tempUniResults","calcDistUniforme","tempExpResults","calcDistExponencial","tempBerResults","calcDistBernoulli","App","exact","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message","numString","stringLength","floor","slice"],"mappings":"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","file":"static/js/main.63930913.chunk.js","sourcesContent":["const table = [];\n\ntable[0] = [0.995, 0.99, 0.975, 0.95, 0.9];\ntable[1] = [0.9293, 0.9, 0.8418, 0.7763, 0.6837];\ntable[2] = [0.829, 0.7845, 0.7076, 0.636, 0.5648];\ntable[3] = [0.7342, 0.6888, 0.6239, 0.5652, 0.4926];\ntable[4] = [0.6685, 0.6271, 0.5632, 0.5094, 0.4469];\ntable[5] = [0.6166, 0.5774, 0.5192, 0.4679, 0.4103];\ntable[6] = [0.5758, 0.5384, 0.4834, 0.436, 0.3814];\ntable[7] = [0.5418, 0.5065, 0.4542, 0.4096, 0.3582];\ntable[8] = [0.5133, 0.4796, 0.43, 0.3874, 0.339];\ntable[9] = [0.4889, 0.4566, 0.4092, 0.3686, 0.3225];\ntable[10] = [0.4677, 0.4367, 0.3912, 0.3524, 0.3082];\ntable[11] = [0.449, 0.4191, 0.3754, 0.3381, 0.2957];\ntable[12] = [0.4324, 0.4036, 0.3614, 0.3254, 0.2846];\ntable[13] = [0.4176, 0.3897, 0.3448, 0.3141, 0.2747];\ntable[14] = [0.4042, 0.3771, 0.3376, 0.3039, 0.2658];\ntable[15] = [0.392, 0.3657, 0.3283, 0.2947, 0.2577];\ntable[16] = [0.3808, 0.3552, 0.3179, 0.2862, 0.2503];\ntable[17] = [0.3706, 0.3456, 0.3093, 0.2785, 0.2435];\ntable[18] = [0.3611, 0.3368, 0.3014, 0.2713, 0.2435];\ntable[19] = [0.3524, 0.3286, 0.294, 0.2647, 0.2315];\n\nconst getKormorovSmirnov = (alpha, nums) => {\n  switch (alpha) {\n    case 0.01:\n      return table[nums - 1][0];\n    case 0.02:\n      return table[nums - 1][1];\n    case 0.05:\n      return table[nums - 1][2];\n    case 0.1:\n      return table[nums - 1][3];\n    case 0.2:\n      return table[nums - 1][4];\n    default:\n      return 0;\n  }\n};\n\nmodule.exports = { getKormorovSmirnov };\n","import React from \"react\";\n\nconst Header = () => {\n  return (\n    <div className=\"header\">\n      <h1>Generador Proyecto </h1>\n    </div>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\nimport { Dropdown } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport Header from \"./header\";\n\nconst TypeSelector = () => {\n  return (\n    <div>\n      <div className=\"row drop\">\n        <div className=\"col-3\" />\n        <div className=\"col-2 first \">\n          <Dropdown>\n            <Dropdown.Toggle>Algoritmos</Dropdown.Toggle>\n            <Dropdown.Menu>\n              <Dropdown.Item>\n                <Link\n                  className=\"dropdown-link\"\n                  to=\"/algoritmo-cuadrados-medios\"\n                >\n                  Algoritmo Cuadrados Medios\n                </Link>\n              </Dropdown.Item>\n              <Dropdown.Item>\n                <Link\n                  className=\"dropdown-link\"\n                  to=\"/algoritmo-productos-medios\"\n                >\n                  Algoritmo Productos Medios\n                </Link>\n              </Dropdown.Item>\n              <Dropdown.Item>\n                <Link\n                  className=\"dropdown-link\"\n                  to=\"/algoritmo-multiplicador-constante\"\n                >\n                  Algoritmo Multiplicador Constante\n                </Link>\n              </Dropdown.Item>\n              <Dropdown.Item>\n                <Link className=\"dropdown-link\" to=\"/algoritmo-lineal\">\n                  Algoritmo Lineal\n                </Link>\n              </Dropdown.Item>\n              <Dropdown.Item>\n                <Link\n                  className=\"dropdown-link\"\n                  to=\"/algoritmo-congruencial-multiplicativo\"\n                >\n                  Algoritmo Congruencial Multiplicativo\n                </Link>\n              </Dropdown.Item>\n              <Dropdown.Item>\n                <Link\n                  className=\"dropdown-link\"\n                  to=\"/algoritmo-congruencial-aditivo\"\n                >\n                  Algoritmo Congruencial Aditivo\n                </Link>\n              </Dropdown.Item>\n              <Dropdown.Item>\n                <Link\n                  className=\"dropdown-link\"\n                  to=\"/algoritmo-congruencial-cuadratico\"\n                >\n                  Algoritmo Congruencial Cuadrático\n                </Link>\n              </Dropdown.Item>\n            </Dropdown.Menu>\n          </Dropdown>\n        </div>\n        <div className=\"col-2\">\n          <Dropdown>\n            <Dropdown.Toggle>Pruebas</Dropdown.Toggle>\n            <Dropdown.Menu>\n              <Dropdown.Item>\n                <Link className=\"dropdown-link\" to=\"/pruebas-medias\">\n                  Prueba de Medias\n                </Link>\n              </Dropdown.Item>\n              <Dropdown.Item>\n                <Link className=\"dropdown-link\" to=\"/prueba-varianza\">\n                  Prueba de Varianza\n                </Link>\n              </Dropdown.Item>\n              <Dropdown.Item>\n                <Link\n                  className=\"dropdown-link\"\n                  to=\"/prueba-uniformidad-chi-cuadrada\"\n                >\n                  Prueba Uniformidad Chi-Cuadrada\n                </Link>\n              </Dropdown.Item>\n              <Dropdown.Item>\n                <Link\n                  className=\"dropdown-link\"\n                  to=\"/pruba-uniformidad-kolmogorov-smirnov\"\n                >\n                  Prueba Uniformidad Kolmogorov-Smirnov\n                </Link>\n              </Dropdown.Item>\n              <Dropdown.Item>\n                <Link\n                  className=\"dropdown-link\"\n                  to=\"/prueba-independencia-corridas-arriba-abajo\"\n                >\n                  Prueba Independencia Corridas Arriba y Abajo\n                </Link>\n              </Dropdown.Item>\n              <Dropdown.Item>\n                <Link\n                  className=\"dropdown-link\"\n                  to=\"/prueba-independencia-corridas-arriba-abajo-media\"\n                >\n                  Prueba Independencia Corridas Arriba y Abajo Media\n                </Link>\n              </Dropdown.Item>\n              <Dropdown.Item>\n                <Link className=\"dropdown-link\" to=\"/prueba-poker\">\n                  Prueba Póker\n                </Link>\n              </Dropdown.Item>\n              <Dropdown.Item>\n                <Link className=\"dropdown-link\" to=\"/prueba-series\">\n                  Prueba Series\n                </Link>\n              </Dropdown.Item>\n              <Dropdown.Item>\n                <Link className=\"dropdown-link\" to=\"/prueba-huecos\">\n                  Prueba Huecos\n                </Link>\n              </Dropdown.Item>\n              <Dropdown.Item>\n                <Link\n                  className=\"dropdown-link\"\n                  to=\"/pruba-distribucion-chi-cuadrada\"\n                >\n                  Prueba Distribución Chi Chuadrada\n                </Link>\n              </Dropdown.Item>\n              <Dropdown.Item>\n                <Link className=\"dropdown-link\" to=\"/prueba-kolmogorov-smirnov\">\n                  Prueba Kolmogorov-Smirnov\n                </Link>\n              </Dropdown.Item>\n            </Dropdown.Menu>\n          </Dropdown>\n        </div>\n        <div className=\"col-2\">\n          <Dropdown>\n            <Dropdown.Toggle>Metodos</Dropdown.Toggle>\n            <Dropdown.Menu>\n              <Dropdown.Item>\n                <Link\n                  className=\"dropdown-link\"\n                  to=\"/metodo-transformada-inversa\"\n                >\n                  Método Transformada Inversa\n                </Link>\n              </Dropdown.Item>\n              <Dropdown.Item>\n                <Link className=\"dropdown-link\" to=\"/metodo-convolucion\">\n                  Método Convolución\n                </Link>\n              </Dropdown.Item>\n            </Dropdown.Menu>\n          </Dropdown>\n        </div>\n        <div className=\"col-3\" />\n      </div>\n    </div>\n  );\n};\n\nexport default TypeSelector;\n","import React, { useState, useEffect } from \"react\";\nimport modifyNums from \"../../services/algorithmFunctions\";\n\nconst AlgoritmoCuadradosMedios = () => {\n  let [d, setD] = useState(3);\n  let [seed, setSeed] = useState(100);\n  let [amount, setAmount] = useState(0);\n  let [generatedNums, setGeneratedNums] = useState([]);\n  useEffect(() => {\n    let seedLength = seed.toString().length;\n    if (d !== seedLength && seedLength > 3 && seedLength < 7) {\n      setD(seedLength);\n    }\n  }, [d, seed]);\n  const getNumsObj = (y, x, r) => {\n    return {\n      y,\n      x,\n      r,\n    };\n  };\n  const generateNums = () => {\n    let tempArr = [];\n    let seedSquare = Math.pow(seed, 2);\n    let middleSeedValues = modifyNums.getMiddleValues(seedSquare, d);\n    tempArr.push(\n      getNumsObj(\n        seedSquare,\n        middleSeedValues,\n        modifyNums.transformToR(middleSeedValues, d)\n      )\n    );\n    for (let i = 1; i < amount; i++) {\n      seedSquare = Math.pow(tempArr[i - 1].x, 2);\n      middleSeedValues = modifyNums.getMiddleValues(seedSquare, d);\n      tempArr.push(\n        getNumsObj(\n          seedSquare,\n          middleSeedValues,\n          modifyNums.transformToR(middleSeedValues, d)\n        )\n      );\n    }\n    setGeneratedNums(tempArr);\n  };\n\n  return (\n    <div>\n      <div className=\"row d-flex justify-content-center\">\n        <h1>Algoritmo Cuadrados Medios</h1>\n      </div>\n      <div className=\"form-group\">\n        <div className=\"row\">\n          <div className=\"col-6 d-flex justify-content-between inputs\">\n            <label for=\"semilla\">Semilla:</label>\n            <input\n              id=\"semilla\"\n              type=\"number\"\n              min=\"100\"\n              max=\"999999\"\n              value={seed}\n              onChange={(e) => setSeed(e.target.value)}\n            />\n          </div>\n          <div className=\"col-3 d-flex justify-content-between inputs\">\n            <label for=\"generar\">Numeros Deseados:</label>\n            <input\n              id=\"generar\"\n              type=\"number\"\n              value={amount}\n              onChange={(e) => setAmount(e.target.value)}\n            />\n          </div>\n        </div>\n        <br />\n        <br />\n        <div>\n          <div className=\"col-8 d-flex justify-content-end inputs\">\n            <div className=\"btn btn-primary\" onClick={(e) => generateNums()}>\n              Generar Numeros\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"row\">\n        <p>D tiene un valor de: {d}</p>\n        <table className=\"table\">\n          <thead>\n            <tr>\n              <th scope=\"col\">Y</th>\n              <th scope=\"col\">X</th>\n              <th scope=\"col\">R</th>\n            </tr>\n          </thead>\n          <tbody>\n            {generatedNums.map((e) => {\n              return (\n                <tr>\n                  <td>{e.y}</td>\n                  <td>{e.x}</td>\n                  <td>{e.r}</td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n      </div>\n    </div>\n  );\n};\n\nexport default AlgoritmoCuadradosMedios;\n","import React, { useState, useEffect } from \"react\";\nimport modifyNums from \"../../services/algorithmFunctions\";\n\nconst AlgoritmoMultiplicadorConstante = () => {\n  let [d, setD] = useState(3);\n  let [seed, setSeed] = useState(100);\n  let [a, setA] = useState(100);\n  let [amount, setAmount] = useState(0);\n  let [generatedNums, setGeneratedNums] = useState([]);\n  let [unvalidA, setUnvalidA] = useState(false);\n  useEffect(() => {\n    let seedLength = seed.toString().length;\n    if (d !== seedLength && seedLength > 3 && seedLength < 7) {\n      setD(seedLength);\n    }\n  }, [seed, a, d]);\n  const getNumsObj = (y, a, x, r) => {\n    return {\n      y,\n      a,\n      x,\n      r,\n    };\n  };\n\n  const generateNums = () => {\n    if (a.toString().length != d) {\n      setUnvalidA(true);\n    } else {\n      setUnvalidA(false);\n      let tempArr = [];\n      let seedProduct = a * seed;\n      let middleSeedValues = modifyNums.getMiddleValues(seedProduct, d);\n      tempArr.push(\n        getNumsObj(\n          seedProduct,\n          a,\n          middleSeedValues,\n          modifyNums.transformToR(middleSeedValues, d)\n        )\n      );\n      for (let i = 1; i < amount; i++) {\n        seedProduct = a * tempArr[i - 1].x;\n        middleSeedValues = modifyNums.getMiddleValues(seedProduct, d);\n        tempArr.push(\n          getNumsObj(\n            seedProduct,\n            a,\n            middleSeedValues,\n            modifyNums.transformToR(middleSeedValues, d)\n          )\n        );\n      }\n      console.log(tempArr);\n      setGeneratedNums(tempArr);\n    }\n  };\n\n  return (\n    <div>\n      <div className=\"row d-flex justify-content-center\">\n        <h1>Algoritmo Multiplicador Constante</h1>\n      </div>\n      <div className=\"form-group\">\n        {unvalidA ? (\n          <div class=\"alert alert-danger\" role=\"alert\">\n            La constante debe ser igual que la semilla\n          </div>\n        ) : (\n          \"\"\n        )}\n        <div className=\"row\">\n          <div className=\"col-4 d-flex justify-content-between inputs\">\n            <label for=\"semilla\">Semilla X0:</label>\n            <input\n              id=\"semilla\"\n              type=\"number\"\n              min=\"100\"\n              max=\"999999\"\n              value={seed}\n              onChange={(e) => setSeed(e.target.value)}\n            />\n          </div>\n          <div className=\"col-3 d-flex justify-content-between inputs\">\n            <label for=\"generar\">Numeros Deseados: </label>\n            <input\n              id=\"generar\"\n              type=\"number\"\n              value={amount}\n              onChange={(e) => setAmount(e.target.value)}\n            />\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col-4 d-flex justify-content-between inputs\">\n            <label for=\"semilla\">Constante:</label>\n            <input\n              id=\"semilla\"\n              type=\"number\"\n              min=\"100\"\n              max=\"999999\"\n              value={a}\n              onChange={(e) => setA(e.target.value)}\n            />\n          </div>\n        </div>\n        <br />\n        <br />\n        <div className=\"row\">\n          <div className=\"col-8 d-flex justify-content-end inputs\">\n            <div className=\"btn btn-primary\" onClick={(e) => generateNums()}>\n              Generar\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"row\">\n        <p>D tiene un valor de: {d}</p>\n        <table className=\"table\">\n          <thead>\n            <tr>\n              <th scope=\"col\">Y</th>\n              <th scope=\"col\">A</th>\n              <th scope=\"col\">X</th>\n              <th scope=\"col\">R</th>\n            </tr>\n          </thead>\n          <tbody>\n            {generatedNums.map((e) => {\n              return (\n                <tr scope=\"row\">\n                  <td>{e.y}</td>\n                  <td>{e.a}</td>\n                  <td>{e.x}</td>\n                  <td>{e.r}</td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n      </div>\n    </div>\n  );\n};\n\nexport default AlgoritmoMultiplicadorConstante;\n","import React, { useState } from \"react\";\n\nconst AlgoritmoLineal = () => {\n  let [d, setD] = useState(0);\n  let [seed, setSeed] = useState(0);\n  let [a, setA] = useState(0);\n  let [c, setC] = useState(0);\n  let [m, setM] = useState(0);\n  let [amount, setAmount] = useState(0);\n  let [generatedNums, setGeneratedNums] = useState([]);\n\n  const getNumsObj = (c, y, a, x, divR, r) => {\n    return {\n      c,\n      y,\n      a,\n      x,\n      divR,\n      r,\n    };\n  };\n\n  const generateNums = () => {\n    let tempArr = [];\n    let tempY = (a * seed + c) % m;\n    tempArr.push(\n      getNumsObj(\n        c,\n        tempY,\n        a,\n        seed,\n        `${tempY}/${m - 1}`,\n        (tempY / (m - 1)).toFixed(d)\n      )\n    );\n    for (let i = 1; i < amount; i++) {\n      tempY = (a * tempArr[i - 1].y + c) % m;\n      tempArr.push(\n        getNumsObj(\n          c,\n          tempY,\n          a,\n          tempArr[i - 1].y,\n          `${tempY}/${m - 1}`,\n          (tempY / (m - 1)).toFixed(d)\n        )\n      );\n    }\n    console.log(tempArr);\n    setGeneratedNums(tempArr);\n  };\n\n  return (\n    <div>\n      <div className=\"row d-flex justify-content-center\">\n        <h1>Algoritmo Lineal</h1>\n      </div>\n      <div className=\"form-group\">\n        <div className=\"row\">\n          <div className=\"col-5 d-flex justify-content-between inputs\">\n            <label for=\"semilla\">Cantidad de digitos:</label>\n            <input\n              id=\"semilla\"\n              type=\"number\"\n              value={d}\n              onChange={(e) => setD(e.target.value)}\n            />\n          </div>\n          <div className=\"col-5 d-flex justify-content-between inputs\">\n            <label for=\"semilla\">Valor de a:</label>\n            <input\n              id=\"semilla\"\n              type=\"number\"\n              value={a}\n              onChange={(e) => setA(e.target.value)}\n            />\n          </div>\n        </div>\n\n        <div className=\"row\">\n          <div className=\"col-5 d-flex justify-content-between inputs\">\n            <label for=\"semilla\">Valor de c:</label>\n            <input\n              id=\"semilla\"\n              type=\"number\"\n              value={c}\n              onChange={(e) => setC(parseInt(e.target.value))}\n            />\n          </div>\n          <div className=\"col-5 d-flex justify-content-between inputs\">\n            <label for=\"semilla\">Valor de m:</label>\n            <input\n              id=\"semilla\"\n              type=\"number\"\n              value={m}\n              onChange={(e) => setM(e.target.value)}\n            />\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col-5 d-flex justify-content-between inputs\">\n            <label for=\"semilla\">Valor de X0:</label>\n            <input\n              id=\"semilla\"\n              type=\"number\"\n              value={seed}\n              onChange={(e) => setSeed(e.target.value)}\n            />\n          </div>\n          <div className=\"col-5 d-flex justify-content-between inputs\">\n            <label for=\"generar\">Numeros Deseados</label>\n            <input\n              id=\"generar\"\n              type=\"number\"\n              value={amount}\n              onChange={(e) => setAmount(e.target.value)}\n            />\n          </div>\n        </div>\n        <br />\n        <br />\n        <div className=\"row\">\n          <div className=\"col-8 d-flex justify-content-end inputs\">\n            <div className=\"btn btn-primary\" onClick={(e) => generateNums()}>\n              Generar Numeros\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"row\">\n        <p>D tiene un valor de: {d}</p>\n        <table className=\"table\">\n          <thead>\n            <tr>\n              <th scope=\"col\">Xi-1</th>\n              <th scope=\"col\">Xi</th>\n              <th scope=\"col\">m</th>\n              <th scope=\"col\">c</th>\n              <th scope=\"col\">Process</th>\n              <th scope=\"col\">ri</th>\n            </tr>\n          </thead>\n          <tbody>\n            {generatedNums.map((e) => {\n              return (\n                <tr>\n                  <td>{e.x}</td>\n                  <td>{e.y}</td>\n                  <td>{e.m}</td>\n                  <td>{e.c}</td>\n                  <td>{e.divR}</td>\n                  <td>{e.r}</td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n      </div>\n    </div>\n  );\n};\n\nexport default AlgoritmoLineal;\n","import React, { useState } from \"react\";\n\nconst AlgoritmoCongruencialMultiplicativo = () => {\n  let [d, setD] = useState(0);\n  let [seed, setSeed] = useState(0);\n  let [a, setA] = useState(0);\n  let [m, setM] = useState(0);\n  let [amount, setAmount] = useState(0);\n  let [generatedNums, setGeneratedNums] = useState([]);\n\n  const getNumsObj = (y, a, x, divR, r) => {\n    return {\n      y,\n      a,\n      x,\n      divR,\n      r,\n    };\n  };\n\n  const generateNums = () => {\n    let tempArr = [];\n    let tempY = (a * seed) % m;\n    tempArr.push(\n      getNumsObj(\n        tempY,\n        a,\n        seed,\n        `${seed}/${m - 1}`,\n        (tempY / (m - 1)).toFixed(d)\n      )\n    );\n    for (let i = 1; i < amount; i++) {\n      tempY = (a * tempArr[i - 1].y) % m;\n      tempArr.push(\n        getNumsObj(\n          tempY,\n          a,\n          tempArr[i - 1].y,\n          `${tempY}/${m - 1}`,\n          (tempY / (m - 1)).toFixed(d)\n        )\n      );\n    }\n    console.log(tempArr);\n    setGeneratedNums(tempArr);\n  };\n\n  return (\n    <div>\n      <div className=\"row d-flex justify-content-center\">\n        <h1>Algoritmo Algoritmo Congruencial Multiplicativo</h1>\n      </div>\n      <div className=\"form-group\">\n        <div className=\"row\">\n          <div className=\"col-5 d-flex justify-content-between inputs\">\n            <label for=\"semilla\">Cantidad de digitos:</label>\n            <input\n              id=\"semilla\"\n              type=\"number\"\n              value={d}\n              onChange={(e) => setD(e.target.value)}\n            />\n          </div>\n          <div className=\"col-5 d-flex justify-content-between inputs\">\n            <label for=\"semilla\">Valor de a:</label>\n            <input\n              id=\"semilla\"\n              type=\"number\"\n              value={a}\n              onChange={(e) => setA(e.target.value)}\n            />\n          </div>\n        </div>\n\n        <div className=\"row\">\n          <div className=\"col-5 d-flex justify-content-between inputs\">\n            <label for=\"semilla\">Valor de m:</label>\n            <input\n              id=\"semilla\"\n              type=\"number\"\n              value={m}\n              onChange={(e) => setM(e.target.value)}\n            />\n          </div>\n          <div className=\"col-5 d-flex justify-content-between inputs\">\n            <label for=\"semilla\">Valor de X0:</label>\n            <input\n              id=\"semilla\"\n              type=\"number\"\n              value={seed}\n              onChange={(e) => setSeed(e.target.value)}\n            />\n          </div>\n        </div>\n\n        <div className=\"row\">\n          <div className=\"col-5 d-flex justify-content-between inputs\">\n            <label for=\"generar\">Numeros Deseados:</label>\n            <input\n              id=\"generar\"\n              type=\"number\"\n              value={amount}\n              onChange={(e) => setAmount(e.target.value)}\n            />\n          </div>\n        </div>\n        <br />\n        <br />\n        <div className=\"row\">\n          <div className=\"col-8 d-flex justify-content-end inputs\">\n            <div className=\"btn btn-primary\" onClick={(e) => generateNums()}>\n              Generar Numeros\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"row\">\n        <p>D tiene un valor de: {d}</p>\n        <table className=\"table\">\n          <thead>\n            <tr>\n              <th scope=\"col\">Xi-1</th>\n              <th scope=\"col\">Xi</th>\n              <th scope=\"col\">m</th>\n              <th scope=\"col\">Process</th>\n              <th scope=\"col\">ri</th>\n            </tr>\n          </thead>\n          <tbody>\n            {generatedNums.map((e) => {\n              return (\n                <tr>\n                  <td>{e.x}</td>\n                  <td>{e.y}</td>\n                  <td>{m}</td>\n                  <td>{e.divR}</td>\n                  <td>{e.r}</td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n      </div>\n    </div>\n  );\n};\n\nexport default AlgoritmoCongruencialMultiplicativo;\n","import React, { useState, useEffect } from \"react\";\n\nconst AlgoritmoCongruencialAditivo = () => {\n  let [d, setD] = useState(0);\n  let [seeds, setSeeds] = useState([]);\n  let [n, setN] = useState(0);\n  let [m, setM] = useState(0);\n  let [currentSeed, setCurrentSeed] = useState(0);\n  let [amount, setAmount] = useState(0);\n  let [generatedNums, setGeneratedNums] = useState([]);\n\n  const getNumsObj = (xi, xi_n, xi_1, divR, r) => {\n    return {\n      xi,\n      xi_n,\n      xi_1,\n      divR,\n      r,\n    };\n  };\n\n  const removeValue = (index) => {\n    let temp = [...seeds];\n    console.log(index);\n    console.log(temp.slice(index));\n    setSeeds(temp);\n  };\n\n  const addValueToArray = () => {\n    setSeeds([...seeds, currentSeed]);\n    setCurrentSeed(0);\n  };\n  const generateNums = () => {\n    let tempArr = [];\n    let tempY;\n    let tempSeeds = [...seeds];\n    // tempArr.push(getNumsObj(tempY, a, seed, `${seed}/${m-1}`, (tempY/(m-1)).toFixed(d)));\n    for (let i = 0; i < amount; i++) {\n      console.log(`${tempSeeds[i]} ${tempSeeds[i + n - 1]} ${n}`);\n      tempY = (tempSeeds[i] + tempSeeds[i + n - 1]) % m;\n      tempSeeds.push(tempY);\n      tempArr.push(\n        getNumsObj(\n          tempY,\n          tempSeeds[i],\n          tempSeeds[i + n - 1],\n          `${tempY}/${m - 1}`,\n          (tempY / (m - 1)).toFixed(d)\n        )\n      );\n      console.log(tempArr);\n      console.log(tempSeeds);\n    }\n    setGeneratedNums(tempArr);\n  };\n\n  return (\n    <div>\n      <div className=\"row d-flex justify-content-center\">\n        <h1>Algoritmo Algoritmo Congruencial Aditivo</h1>\n      </div>\n      <div className=\"form-group\">\n        <div className=\"row\">\n          <div className=\"col-5 d-flex justify-content-between inputs\">\n            <label for=\"semilla\">Cantidad de digitos:</label>\n            <input\n              id=\"semilla\"\n              type=\"number\"\n              value={d}\n              onChange={(e) => setD(e.target.value)}\n            />\n          </div>\n          <div className=\"col-4 d-flex justify-content-between inputs\">\n            <label for=\"semilla\">Valor de n:</label>\n            <input\n              id=\"semilla\"\n              type=\"number\"\n              value={n}\n              onChange={(e) => setN(parseInt(e.target.value))}\n            />\n          </div>\n        </div>\n\n        <div className=\"row\">\n          <div className=\"col-5 d-flex justify-content-between inputs\">\n            <label for=\"semilla\">Valor de m:</label>\n            <input\n              id=\"semilla\"\n              type=\"number\"\n              value={m}\n              onChange={(e) => setM(parseInt(e.target.value))}\n            />\n          </div>\n          <div className=\"col-5 d-flex\">\n            <label for=\"semilla mr-auto p-2\">Valores de X0 a Xn:</label>\n            <div className=\"ml-auto p-2\">\n              <input\n                id=\"semilla\"\n                type=\"number\"\n                value={currentSeed}\n                onChange={(e) => setCurrentSeed(parseInt(e.target.value))}\n              />\n              <div\n                className=\"btn btn-primary p-2\"\n                onClick={(e) => addValueToArray()}\n              >\n                Agregar Valores X0-Xn individualmente\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col-5 d-flex justify-content-between inputs\">\n            <label for=\"generar\">Cantidad de Numeros a Generar:</label>\n            <input\n              id=\"generar\"\n              type=\"number\"\n              value={amount}\n              onChange={(e) => setAmount(parseInt(e.target.value))}\n            />\n          </div>\n          <div className=\"row number\">\n            <div className=\"col-6 d-flex flex-wrap inputs\">\n              {seeds.map((seed, index) => {\n                return <p className=\"number-list\">{seed}</p>;\n              })}\n            </div>\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col-7 d-flex justify-content-end inputs\">\n            <div className=\"btn btn-primary\" onClick={(e) => generateNums()}>\n              Generar Numeros\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"row\">\n        <h4>Valor de D: {d}</h4>\n        <table className=\"table\">\n          <thead>\n            <tr>\n              <th scope=\"col\">Xi</th>\n              <th scope=\"col\">Xi-1</th>\n              <th scope=\"col\">Xi-n</th>\n              <th scope=\"col\">Process</th>\n              <th scope=\"col\">ri</th>\n            </tr>\n          </thead>\n          <tbody>\n            {generatedNums.map((e) => {\n              return (\n                <tr>\n                  <td>{e.xi}</td>\n                  <td>{e.xi_1}</td>\n                  <td>{e.xi_n}</td>\n                  <td>{e.divR}</td>\n                  <td>{e.r}</td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n      </div>\n    </div>\n  );\n};\n\nexport default AlgoritmoCongruencialAditivo;\n","import React, { useState } from \"react\";\n\nconst AlgoritmoCongruencialCuadratico = () => {\n  let [d, setD] = useState(0);\n  let [seed, setSeed] = useState(0);\n  let [a, setA] = useState(0);\n  let [b, setB] = useState(0);\n  let [c, setC] = useState(0);\n  let [m, setM] = useState(0);\n  let [amount, setAmount] = useState(0);\n  let [generatedNums, setGeneratedNums] = useState([]);\n\n  const getNumsObj = (b, c, a, x2, x1, divR, r) => {\n    return {\n      b,\n      c,\n      x1,\n      a,\n      x2,\n      divR,\n      r,\n    };\n  };\n\n  const generateNums = () => {\n    let tempArr = [];\n    let tempY = (a * Math.pow(seed, 2) + b * seed + c) % m;\n    tempArr.push(\n      getNumsObj(\n        b,\n        c,\n        a,\n        tempY,\n        tempY,\n        `${tempY}/${m - 1}`,\n        (tempY / (m - 1)).toFixed(d)\n      )\n    );\n    for (let i = 1; i < amount; i++) {\n      tempY =\n        (a * Math.pow(tempArr[i - 1].x2, 2) + b * tempArr[i - 1].x2 + c) % m;\n      tempArr.push(\n        getNumsObj(\n          b,\n          c,\n          a,\n          tempY,\n          tempY,\n          `${tempY}/${m - 1}`,\n          (tempY / (m - 1)).toFixed(d)\n        )\n      );\n    }\n    console.log(tempArr);\n    setGeneratedNums(tempArr);\n  };\n\n  return (\n    <div>\n      <div className=\"row d-flex justify-content-center\">\n        <h1>Algoritmo Congruencial Cuadratico</h1>\n      </div>\n      <div className=\"form-group\">\n        <div className=\"row\">\n          <div className=\"col-6 d-flex justify-content-between inputs\">\n            <label for=\"semilla\">Cantidad de digitos:</label>\n            <input\n              id=\"semilla\"\n              type=\"number\"\n              value={d}\n              onChange={(e) => setD(e.target.value)}\n            />\n          </div>\n          <div className=\"col-6 d-flex justify-content-between inputs\">\n            <label for=\"semilla\">Valor de a:</label>\n            <input\n              id=\"semilla\"\n              type=\"number\"\n              value={a}\n              onChange={(e) => setA(e.target.value)}\n            />\n          </div>\n        </div>\n\n        <div className=\"row\">\n          <div className=\"col-6 d-flex justify-content-between inputs\">\n            <label for=\"semilla\">Valor de b:</label>\n            <input\n              id=\"semilla\"\n              type=\"number\"\n              value={b}\n              onChange={(e) => setB(e.target.value)}\n            />\n          </div>\n          <div className=\"col-6 d-flex justify-content-between inputs\">\n            <label for=\"semilla\">Valor de c:</label>\n            <input\n              id=\"semilla\"\n              type=\"number\"\n              value={c}\n              onChange={(e) => setC(parseInt(e.target.value))}\n            />\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col-6 d-flex justify-content-between inputs\">\n            <label for=\"semilla\">Valor de m:</label>\n            <input\n              id=\"semilla\"\n              type=\"number\"\n              value={m}\n              onChange={(e) => setM(e.target.value)}\n            />\n          </div>\n          <div className=\"col-6 d-flex justify-content-between inputs\">\n            <label for=\"semilla\">Valor de X0:</label>\n            <input\n              id=\"semilla\"\n              type=\"number\"\n              value={seed}\n              onChange={(e) => setSeed(e.target.value)}\n            />\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col-6 d-flex justify-content-between inputs\">\n            <label for=\"generar\">Cantidad de Numeros a Generar:</label>\n            <input\n              id=\"generar\"\n              type=\"number\"\n              value={amount}\n              onChange={(e) => setAmount(e.target.value)}\n            />\n          </div>\n        </div>\n        <br />\n        <br />\n        <div className=\"row\">\n          <div className=\"col-8 d-flex justify-content-end inputs\">\n            <div className=\"btn btn-primary\" onClick={(e) => generateNums()}>\n              Generar Numeros\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"row\">\n        <p>D tiene un valor de: {d}</p>\n        <table className=\"table\">\n          <thead>\n            <tr>\n              <th scope=\"col\">Xi</th>\n              <th scope=\"col\">m</th>\n              <th scope=\"col\">a</th>\n              <th scope=\"col\">b</th>\n              <th scope=\"col\">c</th>\n              <th scope=\"col\">Process</th>\n              <th scope=\"col\">ri</th>\n            </tr>\n          </thead>\n          <tbody>\n            {generatedNums.map((e) => {\n              return (\n                <tr scope=\"row\">\n                  <td>{e.x1}</td>\n                  <td>{m}</td>\n                  <td>{e.a}</td>\n                  <td>{e.b}</td>\n                  <td>{e.c}</td>\n                  <td>{e.divR}</td>\n                  <td>{e.r}</td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n      </div>\n    </div>\n  );\n};\n\nexport default AlgoritmoCongruencialCuadratico;\n","import React, { useState, useEffect } from \"react\";\nimport modifyNums from \"../../services/algorithmFunctions\";\n\nconst AlgoritmoProductosMedios = () => {\n  let [d, setD] = useState(3);\n  let [seed, setSeed] = useState(100);\n  let [seed2, setSeed2] = useState(100);\n  let [amount, setAmount] = useState(0);\n  let [generatedNums, setGeneratedNums] = useState([]);\n  useEffect(() => {\n    let seedLength = seed.toString().length;\n    let seed2Length = seed2.toString().length;\n    if (\n      d !== seedLength &&\n      seedLength > 3 &&\n      seedLength < 7 &&\n      seed2Length > 3 &&\n      seed2Length < 7\n    ) {\n      setD(seedLength > seed2Length ? seedLength : seed2Length);\n    }\n  }, [d, seed, seed2]);\n  const getNumsObj = (y, x1, x2, r) => {\n    return {\n      y,\n      x1,\n      x2,\n      r,\n    };\n  };\n\n  const generateNums = () => {\n    let tempArr = [];\n    let seedProduct = seed * seed2;\n    let middleSeedValues = modifyNums.getMiddleValues(seedProduct, d);\n    tempArr.push(\n      getNumsObj(\n        seedProduct,\n        seed2,\n        middleSeedValues,\n        modifyNums.transformToR(middleSeedValues, d)\n      )\n    );\n    for (let i = 1; i < amount; i++) {\n      seedProduct = tempArr[i - 1].x1 * tempArr[i - 1].x2;\n      middleSeedValues = modifyNums.getMiddleValues(seedProduct, d);\n      tempArr.push(\n        getNumsObj(\n          seedProduct,\n          tempArr[i - 1].x2,\n          middleSeedValues,\n          modifyNums.transformToR(middleSeedValues, d)\n        )\n      );\n    }\n    console.log(tempArr);\n    setGeneratedNums(tempArr);\n  };\n\n  return (\n    <div>\n      <div className=\"row d-flex justify-content-center\">\n        <h1>Algoritmo Productos Medios</h1>\n      </div>\n      <div className=\"form-group\">\n        <div className=\"row\">\n          <div className=\"col-4 d-flex justify-content-between inputs\">\n            <label for=\"semilla\">Semilla X0:</label>\n            <input\n              id=\"semilla\"\n              type=\"number\"\n              min=\"100\"\n              max=\"999999\"\n              value={seed}\n              onChange={(e) => setSeed(e.target.value)}\n            />\n          </div>\n          <div className=\"col-3 d-flex justify-content-between inputs\">\n            <label for=\"generar\">Numeros Deseados:</label>\n            <input\n              id=\"generar\"\n              type=\"number\"\n              value={amount}\n              min=\"0\"\n              onChange={(e) => setAmount(e.target.value)}\n            />\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col-4 d-flex justify-content-between inputs\">\n            <label for=\"semilla\">Semilla X1:</label>\n            <input\n              id=\"semilla\"\n              type=\"number\"\n              min=\"100\"\n              max=\"999999\"\n              value={seed2}\n              onChange={(e) => setSeed2(e.target.value)}\n            />\n          </div>\n        </div>\n        <br />\n        <br />\n        <div className=\"row\">\n          <div className=\"col-8 d-flex justify-content-end inputs\">\n            <div className=\"btn btn-primary\" onClick={(e) => generateNums()}>\n              Generar Numeros\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"row\">\n        <p>D tiene un valor de: {d}</p>\n        <table className=\"table\">\n          <thead>\n            <tr>\n              <th scope=\"col\">Y</th>\n              <th scope=\"col\">Xi-1</th>\n              <th scope=\"col\">Xi</th>\n              <th scope=\"col\">R</th>\n            </tr>\n          </thead>\n          <tbody>\n            {generatedNums.map((e) => {\n              return (\n                <tr scope=\"row\">\n                  <td>{e.y}</td>\n                  <td>{e.x1}</td>\n                  <td>{e.x2}</td>\n                  <td>{e.r}</td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n      </div>\n    </div>\n  );\n};\n\nexport default AlgoritmoProductosMedios;\n","import React from \"react\";\n\nconst PruebaDstrbcnChiCdrd = () => {\n  return (\n    <div>\n      <h1>Hola de Prueba Distribución Chi Cuadrada</h1>\n      <h1>EXTRA</h1>\n    </div>\n  );\n};\n\nexport default PruebaDstrbcnChiCdrd;\n","import React, { useState, useEffect } from \"react\";\nimport jStat from \"jstat\";\nimport { standardNormalTable } from \"simple-statistics\";\nimport chi from \"chi-squared\";\nimport chiSquareInverse from \"inv-chisquare-cdf\";\n\nconst PruebaVarianza = () => {\n  let [c, setC] = useState(\"\");\n  let [currentNum, setCurrentNum] = useState(\"\");\n  let [numbersCSVString, setNumbersCSVString] = useState(\"\");\n  let [numbers, setNumbers] = useState([]);\n  let [acepta, setAcepta] = useState(false);\n  let [testRun, setTestRun] = useState(false);\n  let [media, setMedia] = useState(0);\n  let [alpha, setAlpha] = useState(0.05);\n  let [limitI, setLimitI] = useState(0);\n  let [limitS, setLimitS] = useState(0);\n  let [variance, setVariance] = useState(0);\n\n  useEffect(() => {\n    let degreeFreed = numbers.length ? numbers.length - 1 : 1;\n    let temp = 12 * (numbers.length - 1);\n    setLimitI(chiSquareInverse.invChiSquareCDF(alpha / 2, degreeFreed) / temp);\n    setLimitS(\n      chiSquareInverse.invChiSquareCDF(1 - alpha / 2, degreeFreed) / temp\n    );\n  }, [alpha, numbers]);\n\n  useEffect(() => {\n    let temp =\n      numbers.length > 0\n        ? numbers.reduce((prev, curr) => {\n            return Number(prev) + Math.pow(Number(curr) - media, 2);\n          })\n        : \"\";\n    setVariance(temp / (numbers.length - 1));\n  }, [media, numbers]);\n\n  useEffect(() => {\n    if (limitI < variance && limitS > variance) {\n      setAcepta(true);\n    }\n    if (variance > 0) setTestRun(true);\n  }, [limitI, limitS, variance]);\n\n  const addCSVValues = () => {\n    if (parseFloat(c)) {\n      let nums = numbersCSVString.split(\",\").map((e) => parseFloat(e));\n      setAlpha(parseFloat(c));\n      setNumbers([...nums]);\n    }\n  };\n  const addValueToArray = () => {\n    setNumbers([...numbers, currentNum]);\n    setCurrentNum(\"\");\n  };\n\n  const calculateMed = () => {\n    if (numbers.length > 0) {\n      let sum = numbers.reduce((prev, curr) => {\n        return (Number(prev) + Number(curr)).toFixed(4);\n      });\n      setMedia(sum / numbers.length);\n    }\n  };\n\n  return (\n    <div>\n      <div className=\"row d-flex justify-content-center\">\n        <h1>Prueba de Varianza</h1>\n      </div>\n\n      <small>\n        <h7>Planteamiento de Hipotesis:</h7>\n        <div className=\"col-12\">\n          <h7>H0</h7>\n          <p>\n            Dada la varianza = {variance.toFixed(4)}, se encuentra dentro de los\n            límites y no se puede rechazar el planteamiento que el conjunto de\n            números tiene una varianza de 1/12, con un nivel de confianza{\" \"}\n            {(1 - c) * 100}%\n          </p>\n        </div>\n        <div className=\"col-12\">\n          <h7>H1</h7>\n          <p>\n            Dada la varianza = {variance.toFixed(4)}, no se encuentra dentro de\n            los límites se puede rechazar el planteamiento que el conjunto de\n            números tiene una varianza de 1/12, con un nivel de confianza{\" \"}\n            {(1 - c) * 100}%\n          </p>\n        </div>\n      </small>\n\n      <div className=\"form-group\">\n        <div className=\"row\">\n          <div className=\"col-4 d-flex justify-content-between inputs\">\n            <label for=\"semilla\">Alpha:</label>\n            <input\n              id=\"semilla\"\n              type=\"text\"\n              value={c}\n              onChange={(e) => setC(e.target.value)}\n            />\n          </div>\n        </div>\n        <div className=\"row \">\n          <div className=\"col-6 d-flex flex-column\">\n            <div className=\"d-flex flex-column\">\n              <label for=\"csv\">Ingresar digitos separados por comas:</label>\n              <div className=\"d-flex\">\n                <textarea\n                  id=\"csv\"\n                  type=\"text\"\n                  value={numbersCSVString}\n                  onChange={(e) => setNumbersCSVString(e.target.value)}\n                />\n              </div>\n            </div>\n          </div>\n          <div className=\"col-6 d-flex flex-wrap inputs\">\n            {numbers.map((num) => {\n              return <p className=\"number-list\">{num}</p>;\n            })}\n          </div>\n        </div>\n        <div className=\"row\">\n          <div\n            className=\"btn btn-primary ml-auto p-2\"\n            onClick={(e) => addCSVValues()}\n          >\n            Agregar Numeros\n          </div>\n          <div className=\"col-3 d-flex justify-content-end inputs\">\n            <div className=\"btn btn-primary\" onClick={(e) => calculateMed()}>\n              Correr Prueba\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"row\">\n        {testRun ? (\n          <div>\n            {acepta ? (\n              <div>\n                <div className=\"card-body\">\n                  <h5 className=\"card-title\">\n                    Dado la varianza = {variance}, se encuentra dentro de los\n                    límites y no se puede rechazar el planteamiento, con un\n                    nivel de confianza {(1 - c) * 100}%\n                  </h5>\n                  <div className=\"row\">\n                    <div className=\"col-6 d-flex\">\n                      <p className=\"card-text\">LI= {limitI.toFixed(5)}</p>\n                      <p className=\"card-text ml-auto p-2\">\n                        LS= {limitS.toFixed(5)}\n                      </p>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            ) : (\n              <div>\n                <div className=\"card-body\">\n                  <h5 className=\"card-title\">\n                    Como el ṝ = {variance}, no se encuentra dentro de los\n                    límites y se puede rechazar el plnateamiento que el conjunto\n                    de números tiene media 0.5, con un nivel de confianza{\" \"}\n                    {(1 - c) * 100}%\n                  </h5>\n                  <div className=\"row\">\n                    <div className=\"col-6 d-flex\">\n                      <p className=\"card-text\">LI= {limitI.toFixed(5)}</p>\n                      <p className=\"card-text ml-auto p-2\">\n                        LS= {limitS.toFixed(5)}\n                      </p>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            )}\n          </div>\n        ) : (\n          \"\"\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default PruebaVarianza;\n","import React, { useEffect, useState } from \"react\";\nimport jStat from \"jstat\";\nimport { standardNormalTable } from \"simple-statistics\";\nimport chi from \"chi-squared\";\nimport chiSquareInverse from \"inv-chisquare-cdf\";\n\nconst PruebaUnidormidadChiCuadrada = () => {\n  let [c, setC] = useState(\"\");\n  let [n, setN] = useState(0);\n  let [m, setM] = useState(0);\n  let [currentNum, setCurrentNum] = useState(\"\");\n  let [numbersCSVString, setNumbersCSVString] = useState(\"\");\n  let [numbers, setNumbers] = useState([]);\n  let [acepta, setAcepta] = useState(false);\n  let [testRun, setTestRun] = useState(false);\n  let [chiSum, setChiSum] = useState(0);\n  let [alpha, setAlpha] = useState(0.05);\n  let [chiValue, setChiValue] = useState(0);\n  let [testTable, setTestTable] = useState([]);\n\n  const getObject = (interval, oi, ei, eioiei) => {\n    return {\n      interval,\n      oi,\n      ei,\n      eioiei,\n    };\n  };\n\n  useEffect(() => {\n    if (chiValue > chiSum) {\n      setAcepta(true);\n    }\n    if (testTable.length > 0) setTestRun(true);\n  }, [chiSum, chiValue, testTable.length]);\n\n  useEffect(() => {\n    let degreeFreed = m > 2 ? m - 1 : 1;\n    setChiValue(chiSquareInverse.invChiSquareCDF(1 - alpha / 2, degreeFreed));\n  }, [alpha, m]);\n\n  const addCSVValues = () => {\n    if (parseFloat(c)) {\n      let nums = numbersCSVString.split(\",\").map((e) => parseFloat(e));\n      setAlpha(parseFloat(c));\n      setNumbers([...nums]);\n      setN(nums.length);\n      setM(Math.pow(nums.length, 0.5));\n    }\n  };\n  const addValueToArray = () => {\n    setNumbers([...numbers, currentNum]);\n    setCurrentNum(\"\");\n  };\n\n  const calculateUni = () => {\n    if (numbers.length > 0) {\n      let ei = n / m;\n      let temp = [...testTable];\n      let tempEi = [];\n      for (let i = 0; i < m; i++) {\n        let oi = numbers.filter((e) => e > 0.1 * i && e < 0.1 * (i + 1)).length;\n        let eioisquaredei = Math.pow(ei - oi, 2) / ei;\n        temp.push(\n          getObject(`[${0.01 * i}-${0.01 * (i + 1)}]`, oi, ei, eioisquaredei)\n        );\n        tempEi.push(eioisquaredei);\n      }\n      setTestTable(temp);\n      setChiSum(tempEi.reduce((prev, curr) => prev + curr));\n    }\n  };\n\n  return (\n    <div>\n      <div className=\"row d-flex justify-content-center\">\n        <h1>Prueba de Uniformidad Chi-Cuadrada</h1>\n      </div>\n\n      <small>\n        <h7>Planteamiento de hipotesis:</h7>\n        <div className=\"col-12\">\n          <h7>H0</h7>\n          <p>\n            Como el estadístico calculado {chiSum.toFixed(4)}, es menor al\n            estadístico de las tablas {chiValue.toFixed(4)}\n            no se puede rechazar que los números sigan una distribución uniforme\n            continua, con un nivel de confianza {(1 - c) * 100}%\n          </p>\n        </div>\n        <div className=\"col-12\">\n          <h7>H1</h7>\n          <p>\n            Como el estadístico calculado {chiSum.toFixed(4)}, es mayor al\n            estadístico de las tablas {chiValue.toFixed(4)}\n            se puede rechazar que los números sigan una distribución uniforme\n            continua, con un nivel de confianza {(1 - c) * 100}%\n          </p>\n        </div>\n      </small>\n      <div className=\"form-group\">\n        <div className=\"row\">\n          <div className=\"col-4 d-flex justify-content-between inputs\">\n            <label for=\"semilla\">Alpha:</label>\n            <input\n              id=\"semilla\"\n              type=\"text\"\n              value={c}\n              onChange={(e) => setC(e.target.value)}\n            />\n          </div>\n        </div>\n        <div className=\"row \">\n          <div className=\"col-6 d-flex flex-column\">\n            <div className=\"d-flex flex-column\">\n              <label for=\"csv\">Ingresar digitos separados por comas:</label>\n              <div className=\"d-flex\">\n                <textarea\n                  id=\"csv\"\n                  type=\"text\"\n                  value={numbersCSVString}\n                  onChange={(e) => setNumbersCSVString(e.target.value)}\n                />\n              </div>\n            </div>\n          </div>\n          <div className=\"col-6 d-flex flex-wrap inputs\">\n            {numbers.map((num) => {\n              return <p className=\"number-list\">{num}</p>;\n            })}\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col-4 d-flex justify-content-end inputs\">\n            <div\n              className=\"btn btn-primary ml-auto p-2\"\n              onClick={(e) => addCSVValues()}\n            >\n              Agregar Numeros\n            </div>\n            <div className=\"btn btn-primary\" onClick={(e) => calculateUni()}>\n              Correr Prueba\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"row\">\n        {testRun ? (\n          <div>\n            <table className=\"table\">\n              <thead>\n                <tr>\n                  <th>Intervalo</th>\n                  <th>Oi</th>\n                  <th>Ei = n/m</th>\n                  <th>(Ei-Oi)^2/Ei</th>\n                </tr>\n              </thead>\n              <tbody>\n                {testTable.map((e) => {\n                  {\n                    return (\n                      <tr>\n                        <td>{e.interval}</td>\n                        <td>{e.oi}</td>\n                        <td>{e.ei}</td>\n                        <td>{e.eioiei}</td>\n                      </tr>\n                    );\n                  }\n                })}\n              </tbody>\n            </table>\n            {acepta ? (\n              <div>\n                <div className=\"card-body\">\n                  <h5 className=\"card-title\">\n                    Como el estadístico calculado {chiSum.toFixed(4)}, es menor\n                    al estadístico de las tablas no se puede rechazar que los\n                    números sigan una distribución uniforme continua, con un\n                    nivel de confianza {(1 - c) * 100}%\n                  </h5>\n                  <div className=\"row\">\n                    <div className=\"col-6 d-flex\">\n                      <p className=\"card-text\">Valor de tabla: {chiValue}</p>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            ) : (\n              <div>\n                <div className=\"card-body\">\n                  <h5 className=\"card-title\">\n                    Como el estadístico calculado {chiSum.toFixed(4)}, es mayor\n                    al estadístico de las tablas se puede rechazar que los\n                    números sigan una distribución uniforme, con un nivel de\n                    confianza {(1 - c) * 100}%\n                  </h5>\n                  <div className=\"row\">\n                    <div className=\"col-6 d-flex\">\n                      <p className=\"card-text\">\n                        Valor de las tablas: {chiValue.toFixed(4)}\n                      </p>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            )}\n          </div>\n        ) : (\n          \"\"\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default PruebaUnidormidadChiCuadrada;\n","import React, { useState, useEffect } from \"react\";\nimport chiSquareInverse from \"inv-chisquare-cdf\";\n\nconst PruebaHuecos = () => {\n  let [c, setC] = useState(0);\n  let [numbersCSVString, setNumbersCSVString] = useState(\"\");\n  let [currentNum, setCurrentNum] = useState(\"\");\n  let [alpha, setAlpha] = useState(0);\n  let [acepta, setAcepta] = useState(false);\n  let [testRun, setTestRun] = useState(false);\n  let [numbers, setNumbers] = useState([]);\n  let [minInter, setMinInter] = useState(0);\n  let [maxInter, setMaxInter] = useState(1);\n  let [table, setTable] = useState([]);\n  let [H, setH] = useState(0);\n  let [estTotal, setEstTotal] = useState(0);\n  let [display, setDisplay] = useState(false);\n  let [X2, setx2] = useState(0);\n\n  useEffect(() => {\n    if (X2 > estTotal) {\n      setAcepta(true);\n    }\n    if (X2 > 0 && estTotal > 0) {\n      setTestRun(true);\n    }\n  }, [X2, estTotal]);\n  useEffect(() => {\n    if (alpha > 0) {\n      setx2(chiSquareInverse.invChiSquareCDF(1 - alpha / 2, 4));\n    }\n  }, [alpha]);\n\n  const calculate = () => {\n    let list = [...numbers];\n    let normList = normalizeList(list);\n    let table = fillTable(normList);\n    setTable(table);\n    setDisplay(true);\n  };\n\n  const addValueToArray = () => {\n    let temp = [...numbers, currentNum];\n    setNumbers(temp);\n    setCurrentNum(\"\");\n  };\n\n  const addCSVValues = () => {\n    if (parseFloat(c)) {\n      let nums = numbersCSVString.split(\",\").map((e) => parseFloat(e));\n      setAlpha(parseFloat(c));\n      setNumbers([...nums]);\n    }\n  };\n\n  // agrega 1 si el numero esta dentro de los intervalos, 0 si no\n  const normalizeList = (list) => {\n    let newList = [];\n    list.forEach((x) => {\n      if (minInter <= x && x <= maxInter) {\n        newList.push(1);\n      } else {\n        newList.push(0);\n      }\n    });\n    return newList;\n  };\n\n  // llama a todos los metodos necesarios para llenar la tabla\n  const fillTable = (list) => {\n    let { firstTable, H } = getOi(list);\n    setH(H);\n    let table = getEi(firstTable, H);\n    return getEstadistico(table);\n  };\n\n  // cuenta los hoyos con un tamaño dado\n  const getOi = (list) => {\n    let firstOne = list.indexOf(1);\n    let H = 0;\n    let table = [\n      { i: 0, oi: 0, ei: 0, f: 0 },\n      { i: 1, oi: 0, ei: 0, f: 0 },\n      { i: 2, oi: 0, ei: 0, f: 0 },\n      { i: 3, oi: 0, ei: 0, f: 0 },\n      { i: 4, oi: 0, ei: 0, f: 0 },\n      { i: 5, oi: 0, ei: 0, f: 0 },\n    ];\n    for (let h = 0; h <= 5; h++) {\n      let holes = 0;\n      for (let i = firstOne; i < list.length - 1; i++) {\n        for (let k = i + 1; k < list.length; k++) {\n          if (list[k] === 1) {\n            if (list[i] === list[k]) {\n              if (h === holes) {\n                table[h].oi += 1;\n                H++;\n              } else if (h === 5 && holes >= 5) {\n                table[h].oi += 1;\n                H++;\n              }\n              i = k;\n            }\n            holes = 0;\n          } else {\n            holes++;\n          }\n        }\n      }\n    }\n    return { firstTable: table, H: H };\n  };\n\n  // set values for the EI column\n  const getEi = (table, H) => {\n    table.forEach((obj) => {\n      obj.ei =\n        H * (maxInter - minInter) * Math.pow(1 - (maxInter - minInter), obj.i);\n    });\n    return table;\n  };\n\n  // set values for the Last column\n  const getEstadistico = (table) => {\n    let total = 0;\n    table.forEach((obj) => {\n      obj.f = Math.pow(obj.ei - obj.oi, 2) / obj.ei;\n      total += obj.f;\n    });\n    setEstTotal(total);\n    return table;\n  };\n\n  return (\n    <div>\n      <div className=\"row d-flex justify-content-center\">\n        <h1>Prueba de Huecos</h1>\n      </div>\n      <small>\n        <h7>Planteamiento de Hipotesis:</h7>\n        <div className=\"col-12\">\n          <h7>H0</h7>\n          <p>\n            {\" \"}\n            El valor obtenido de X0^2 {estTotal.toFixed(4)} es menor al\n            estadístico de tabla = {X2.toFixed(4)}, entonces no se puede\n            rechazar que los números del conjunto sean independientes, con un\n            nivel de confianza {(1 - c) * 100}%\n          </p>\n        </div>\n        <div className=\"col-12\">\n          <h7>H1</h7>\n          <p>\n            El valor obtenido de X0^2 {estTotal.toFixed(4)} es mayor al\n            estadístico de tabla = {X2.toFixed(4)}, entonces rechazamos que los\n            números del conjunto sean independientes, con un nivel de confianza{\" \"}\n            {(1 - c) * 100}%\n          </p>\n        </div>\n      </small>\n      <div className=\"form-group\">\n        <div className=\"row\">\n          <div className=\"col-4 d-flex justify-content-between inputs\">\n            <label for=\"semilla\">Alpha:</label>\n            <input\n              id=\"semilla\"\n              type=\"text\"\n              value={c}\n              onChange={(e) => setC(e.target.value)}\n            />\n          </div>\n        </div>\n        <div className=\"row\">\n          <p>Intervalos de prueba: </p>\n        </div>\n        <div className=\"row\">\n          <div className=\"col-2 justify-content-end inputs\">\n            <label htmlFor=\"intervalo0\">Intervalo 0: </label>\n            <input\n              id=\"intervalo0\"\n              type=\"number\"\n              min=\"0\"\n              max=\"1\"\n              onChange={(e) => setMinInter(e.target.value * 1)}\n            />\n          </div>\n          <div className=\"col-2 justify-content-end inputs\">\n            <label htmlFor=\"interval1\">Intervalo 1 : </label>\n            <input\n              id=\"intervalo1\"\n              type=\"number\"\n              min=\"0\"\n              max=\"1\"\n              onChange={(e) => setMaxInter(e.target.value * 1)}\n            />\n          </div>\n        </div>\n        <div className=\"row \">\n          <div className=\"col-6 d-flex flex-column\">\n            <div className=\"d-flex flex-column\">\n              <label for=\"csv\">Ingresar numeros separados por comas:</label>\n              <div className=\"d-flex\">\n                <textarea\n                  id=\"csv\"\n                  type=\"text\"\n                  value={numbersCSVString}\n                  onChange={(e) => setNumbersCSVString(e.target.value)}\n                />\n              </div>\n            </div>\n          </div>\n          <div className=\"col-6 d-flex flex-wrap inputs\">\n            {numbers.map((num) => {\n              return <p className=\"number-list\">{num}</p>;\n            })}\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col-4 d-flex justify-content-end inputs\">\n            <div\n              className=\"btn btn-primary ml-auto p-2\"\n              onClick={(e) => addCSVValues()}\n            >\n              Agregar Numeros\n            </div>\n            <div className=\"btn btn-primary\" onClick={(e) => calculate()}>\n              Correr Prueba\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"row\">\n        {testRun ? (\n          <div>\n            <table className=\"table\">\n              <thead>\n                <tr>\n                  <th scope=\"col\">Tamaño Hueco</th>\n                  <th scope=\"col\">Oi</th>\n                  <th scope=\"col\">Ei</th>\n                  <th scope=\"col\">Estadistico</th>\n                </tr>\n              </thead>\n              <tbody>\n                {table.map((e) => {\n                  return (\n                    <tr scope=\"row\" key={e.i}>\n                      <td>{e.i}</td>\n                      <td>{e.oi}</td>\n                      <td>{e.ei.toFixed(3)}</td>\n                      <td>{e.f.toFixed(3)}</td>\n                    </tr>\n                  );\n                })}\n                <tr scope=\"row\">\n                  <td>TOTAL</td>\n                  <td>H={H}</td>\n                  <td>H={H}</td>\n                  <td>{estTotal.toFixed(3)}</td>\n                </tr>\n              </tbody>\n            </table>\n            {acepta ? (\n              <div>\n                <div className=\"card-header\">\n                  No se puede negar la hipotesis\n                </div>\n                <div className=\"card-body\">\n                  <h5 className=\"card-title\">\n                    Como el estadístico calculado {estTotal.toFixed(4)}, es\n                    menor al estadístico de las tablas no se puede rechazar que\n                    los números sigan una distribución uniforme continua, con un\n                    nivel de confianza {(1 - c) * 100}%\n                  </h5>\n                  <div className=\"row\">\n                    <div className=\"col-6 d-flex\">\n                      <h2 className=\"card-text\">\n                        Valor de la tabla: {X2.toFixed(4)}\n                      </h2>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            ) : (\n              <div>\n                <div className=\"card-header\">Se niega la hipotesis</div>\n                <div className=\"card-body\">\n                  <h5 className=\"card-title\">\n                    Como el estadístico calculado {estTotal.toFixed(4)}, es\n                    mayor al estadístico de las tablas se puede rechazar que los\n                    números sigan una distribución uniforme continuacon, con un\n                    nivel de confianza {(1 - c) * 100}%\n                  </h5>\n                  <div className=\"row\">\n                    <div className=\"col-6 d-flex\">\n                      <h2 className=\"card-text\">\n                        Valor de la tabla: {X2.toFixed(4)}\n                      </h2>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            )}\n          </div>\n        ) : (\n          \"\"\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default PruebaHuecos;\n","import React, { useState, useEffect } from \"react\";\nimport { standardNormalTable } from \"simple-statistics\";\n\nconst PruebaCorrArrAbMed = () => {\n  let [c, setC] = useState(\"\");\n  let [alpha, setAlpha] = useState(0);\n  let [acepta, setAcepta] = useState(false);\n  let [testRun, setTestRun] = useState(false);\n  let [numeros, setNumeros] = useState(\"\");\n  let [N, setN] = useState(0);\n  let [C0, setC0] = useState(0);\n  let [N1, setN1] = useState(0);\n  let [N0, setN0] = useState(0);\n  let [MC0, setMC0] = useState(0);\n  let [VariazaC0, setVariazaC0] = useState(0);\n  let [Z0, setZ0] = useState(0);\n  let [Hipot, setHipot] = useState(\"\");\n\n  useEffect(() => {\n    if (Z0 < alpha && Z0 > -alpha) {\n      setAcepta(true);\n    }\n    if (alpha > 0) {\n      setTestRun(true);\n    }\n  }, [alpha, Z0]);\n  const prueba = () => {\n    let tempArr = numeros.split(\",\");\n    let n = tempArr.length;\n    setN(n);\n    let media = 0.5;\n    let countSwitch = 0;\n    let swithflag = 0;\n\n    let count1 = tempArr.reduce((a, b) => {\n      let temp = parseFloat(b.trim()) > media ? 1 : 0;\n      if (temp != swithflag) {\n        countSwitch++;\n        swithflag = !swithflag;\n      }\n      return parseInt(a) + temp;\n    }, 0);\n    let count0 = n - count1;\n\n    setC0(countSwitch);\n    setN1(count1);\n    setN0(count0);\n    let mc0 = (2 * count1 * count0) / n + 1 / 2;\n    setMC0(mc0);\n\n    let variazaC0 =\n      (2 * count0 * count1 * (2 * count0 * count1 - n)) / (n * n * (n - 1));\n    setVariazaC0(variazaC0);\n    standardNormalTable.forEach((val, index) => {\n      if (val === 1 - parseFloat(c) / 2) setAlpha(index);\n    });\n    let z0 = Math.abs((countSwitch - mc0) / Math.sqrt(variazaC0));\n    setZ0(z0);\n  };\n\n  return (\n    <div>\n      <div className=\"row d-flex justify-content-center\">\n        <h1>Prueba Independencia Corridas Arriba y Abajo Media</h1>\n      </div>\n      <small>\n        <h7>Planteamiento de Hipotesis:</h7>\n        <div className=\"col-12\">\n          <h7>H0</h7>\n          <p>\n            Como el valor Z0 = {Z0.toFixed(4)} cae dentro de nuestro intervalo\n            (-{alpha * 0.01}, {alpha * 0.01}) no podemos rechazar que los\n            números sean independientes, con un nivel de confianza{\" \"}\n            {(1 - c) * 100}%\n          </p>\n        </div>\n        <div className=\"col-12\">\n          <h7>H1</h7>\n          <p>\n            Como el valor Z0 = {Z0.toFixed(4)} no cae dentro de nuestro\n            intervalo (-{alpha * 0.01}, {alpha * 0.01}) podemos rechazar que los\n            números sean independientes, con un nivel de confianza{\" \"}\n            {(1 - c) * 100}%\n          </p>\n        </div>\n      </small>\n      <div className=\"form-group\">\n        <div className=\"row\">\n          <div className=\"col-4 d-flex justify-content-between inputs\">\n            <label for=\"semilla\">Alpha:</label>\n            <input\n              id=\"semilla\"\n              type=\"text\"\n              value={c}\n              onChange={(e) => setC(e.target.value)}\n            />\n          </div>\n        </div>\n        <div className=\"d-flex flex-column\">\n          <label for=\"csv\">Ingresar numeros separados por comas:</label>\n          <div className=\"d-flex\">\n            <textarea\n              id=\"csv\"\n              type=\"text\"\n              value={numeros}\n              onChange={(e) => setNumeros(e.target.value)}\n            />\n          </div>\n        </div>\n      </div>\n      <div className=\"row\">\n        <div className=\"col-12 d-flex justify-content-center\">\n          <div className=\"btn btn-primary\" onClick={(e) => prueba()}>\n            Correr Prueba\n          </div>\n        </div>\n      </div>\n      <br />\n      <div className=\"row\">\n        {testRun ? (\n          <div>\n            <div className=\"row d-flex border-bottom\">\n              <div className=\"col \">N:</div>\n              <div className=\"col\">{N}</div>\n            </div>\n            <div className=\"row d-flex border-bottom\">\n              <div className=\"col-6\">Co:</div>\n              <div className=\"col-6\">{C0}</div>\n            </div>\n            <div className=\"row d-flex border-bottom\">\n              <div className=\"col-6\">N1:</div>\n              <div className=\"col-6\">{N1}</div>\n            </div>\n            <div className=\"row d-flex border-bottom\">\n              <div className=\"col-6\">No:</div>\n              <div className=\"col-6\">{N0}</div>\n            </div>\n            <div className=\"row d-flex border-bottom\">\n              <div className=\"col-6\">MCo:</div>\n              <div className=\"col-6\">{MC0}</div>\n            </div>\n            <div className=\"row d-flex border-bottom\">\n              <div className=\"col-6\">VariazaC0:</div>\n              <div className=\"col-6\">{VariazaC0.toFixed(4)}</div>\n            </div>\n            <div className=\"row d-flex border-bottom\">\n              <div className=\"col-6\">Zo:</div>\n              <div className=\"col-6\">{Z0.toFixed(4)}</div>\n            </div>\n            {acepta ? (\n              <div>\n                <div className=\"card-body\">\n                  <h5 className=\"card-title\">\n                    Como el valor Zo = {Z0.toFixed(4)} cae dentro de nuestro\n                    intervalo (-\n                    {alpha * 0.01}, {alpha * 0.01}) no podemos rechazar que los\n                    números sean independientes, con un nivel de confianza{\" \"}\n                    {(1 - c) * 100}%\n                  </h5>\n                  <h2>Zo = {Z0.toFixed(4)}</h2>\n                </div>\n              </div>\n            ) : (\n              <div>\n                <div className=\"card-body\">\n                  <h5 className=\"card-title\">\n                    Como el valor Zo = {Z0.toFixed(4)} no cae dentro de nuestro\n                    intervalo (-{alpha * 0.01}, {alpha * 0.01}) podemos rechazar\n                    que los números sean independientes , con un nivel de\n                    confianza {(1 - c) * 100}%\n                  </h5>\n\n                  <h2>Zo = {Z0.toFixed(4)}</h2>\n                </div>\n              </div>\n            )}\n          </div>\n        ) : (\n          \"\"\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default PruebaCorrArrAbMed;\n","import React, { useState, useEffect } from \"react\";\nimport { standardNormalTable } from \"simple-statistics\";\n\nconst PruebaIndepCorrArrAb = () => {\n  let [c, setC] = useState(\"\");\n  let [testRun, setTestRun] = useState(\"\");\n  let [acepta, setAcepta] = useState(\"\");\n  let [rawList, setRawList] = useState(\"\");\n  let [corridas, setCorridas] = useState(0);\n  let [mCo, setMco] = useState(0);\n  let [chiCoSq, setChicoSq] = useState(0);\n  let [zo, setZo] = useState(0);\n  let [size, setSize] = useState(0);\n  let [display, setDisplay] = useState(false);\n  let [alpha, setAlpha] = useState(0);\n\n  useEffect(() => {\n    if (zo < alpha) {\n      setAcepta(true);\n    }\n    if (zo > 0) {\n      setTestRun(true);\n    }\n  }, [alpha, zo]);\n  const calculate = () => {\n    let r = inputToList();\n    let n = r.length;\n    let s = compareAdjacent(r);\n    let corridas = calculateCorrida(s);\n    let mco = calcMCO(n);\n    let chiCo = calcChiCo(n);\n    let zo = calcZo(corridas, mco, chiCo);\n    standardNormalTable.forEach((val, index) => {\n      if (val === 1 - parseFloat(c) / 2) setAlpha(index);\n    });\n\n    setSize(n);\n    setCorridas(corridas);\n    setMco(mco);\n    setChicoSq(chiCo);\n    setZo(zo);\n    setDisplay(true);\n  };\n\n  const inputToList = () => {\n    let cleanedList = rawList.split(\",\").map((x) => {\n      return x.trim();\n    });\n    return cleanedList;\n  };\n\n  const compareAdjacent = (list) => {\n    let s = [];\n    for (let i = 1; i < list.length; i++) {\n      if (list[i - 1] <= list[i]) {\n        s.push(1);\n      } else {\n        s.push(0);\n      }\n    }\n    return s;\n  };\n\n  const calculateCorrida = (s) => {\n    let flag = s[0];\n    let Co = 1;\n    s.forEach((x) => {\n      if (x !== flag) {\n        Co++;\n        flag = x;\n      }\n    });\n    return Co;\n  };\n\n  const calcMCO = (n) => {\n    return (2 * n - 1) / 3;\n  };\n\n  const calcChiCo = (n) => {\n    return (16 * n - 29) / 90;\n  };\n\n  const calcZo = (co, mco, chiCo) => {\n    return Math.abs((co - mco) / Math.sqrt(chiCo));\n  };\n\n  const getMessage = () => {\n    if (display) {\n      if (zo <= 1.96) {\n        return \"No se puede rechazar Ho\";\n      } else {\n        return \"Se rechaza Ho\";\n      }\n    }\n  };\n\n  return (\n    <div>\n      <div className=\"row d-flex justify-content-center\">\n        <h1>Prueba Independencia Corridas Arriba y Abajo</h1>\n      </div>\n      <small>\n        <h7>Planteamiento de Hipotesis:</h7>\n        <div className=\"col-12\">\n          <h7>H0</h7>\n          <p>\n            Dado el Z0 = {zo.toFixed(4)}, tiene un valor menor al de la tabla{\" \"}\n            {alpha * 0.01} no se puede rechazar el planteamiento que el conjunto\n            de números son independientes, con un nivel de confianza{\" \"}\n            {(1 - c) * 100}%\n          </p>\n        </div>\n        <div className=\"col-12\">\n          <h7>H1</h7>\n          <p>\n            Dado el Z0 = {zo.toFixed(4)}, tiene un valor mayor al de la tabla{\" \"}\n            {alpha * 0.01} se puede rechazar el planteamiento que el conjunto de\n            números son independientes, con un nivel de confianza{\" \"}\n            {(1 - c) * 100}%\n          </p>\n        </div>\n      </small>\n      <div className=\"form-group\">\n        <div className=\"row\">\n          <div className=\"col-4 d-flex justify-content-between inputs\">\n            <label for=\"semilla\">Alpha:</label>\n            <input\n              id=\"semilla\"\n              type=\"text\"\n              value={c}\n              onChange={(e) => setC(e.target.value)}\n            />\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"d-flex flex-column\">\n            <label for=\"csv\">Ingresar numeros separados por comas:</label>\n            <div className=\"d-flex\">\n              <textarea\n                id=\"csv\"\n                type=\"text\"\n                value={rawList}\n                onChange={(e) => setRawList(e.target.value)}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"row\">\n        <div className=\"btn btn-primary\" onClick={(e) => calculate()}>\n          Correr Prueba\n        </div>\n        <div className=\"row\">\n          {testRun ? (\n            <div className=\"col-12\">\n              <div className=\"row d-flex border-bottom\">\n                <div className=\"col \">Tamaño:</div>\n                <div className=\"col\">{size}</div>\n              </div>\n              <div className=\"row d-flex border-bottom\">\n                <div className=\"col-6\">Corridas:</div>\n                <div className=\"col-6\">{corridas}</div>\n              </div>\n              <div className=\"row d-flex border-bottom\">\n                <div className=\"col-6\">mCo:</div>\n                <div className=\"col-6\">{mCo.toFixed(5)}</div>\n              </div>\n              <div className=\"row d-flex border-bottom\">\n                <div className=\"col-6\">Chi2 Co:</div>\n                <div className=\"col-6\">{chiCoSq.toFixed(5)}</div>\n              </div>\n              <div className=\"row d-flex border-bottom\">\n                <div className=\"col-6\">Zo:</div>\n                <div className=\"col-6\">{zo.toFixed(5)}</div>\n              </div>\n              {acepta ? (\n                <div>\n                  <div className=\"card-header\">\n                    No se puede negar la hipotesis\n                  </div>\n                  <div className=\"card-body\">\n                    <h5 className=\"card-title\">\n                      Dado el Zo = {zo.toFixed(5)}, tiene un valor menor al de\n                      la tabla no se puede rechazar el planteamiento que son\n                      independientes, con un nivel de confianza {(1 - c) * 100}%\n                    </h5>\n                    <div className=\"row\">\n                      <div className=\"col-6 d-flex\">\n                        <h2 className=\"card-text\">\n                          Zo de tabla= {alpha * 0.01}\n                        </h2>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              ) : (\n                <div>\n                  <div className=\"card-header\">Se niega la hipotesis</div>\n                  <div className=\"card-body\">\n                    <h5 className=\"card-title\">\n                      Dado el Zo = {zo.toFixed(5)}, tiene un valor mayor al de\n                      la tabla se puede rechazar el planteamiento que son\n                      independientes, con un nivel de confianza {(1 - c) * 100}%\n                    </h5>\n                    <div className=\"row\">\n                      <div className=\"col-6 d-flex\">\n                        <h2 className=\"card-text ml-auto p-2\">\n                          Zo de tabla= {alpha * 0.01}\n                        </h2>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              )}\n            </div>\n          ) : (\n            \"\"\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default PruebaIndepCorrArrAb;\n","import React from \"react\";\n\nconst PruebaDstrbcnChiCdrd = () => {\n  return (\n    <div>\n      <h1></h1>\n      <h1>EXTRA</h1>\n    </div>\n  );\n};\n\nexport default PruebaDstrbcnChiCdrd;\n","import React, { useState, useEffect } from \"react\";\nimport { standardNormalTable } from \"simple-statistics\";\n// const nums = [0.0449,0.1733,0.5746,0.049,0.8406,0.849,0.92,0.2564,0.6015,0.6694,0.3972,0.7025,0.1055,0.1247,0.1977,0.0125,0.63,0.2531,0.8297,0.6483,0.6972,0.9582,0.9085,0.8524,0.5514,0.0316,0.3587,0.7041,0.5915,0.2523,0.2545,0.3044,0.0207,0.1067,0.3857,0.1746,0.3362,0.1589,0.3727,0.4145]\n\nconst PruebaMedias = () => {\n  let [c, setC] = useState(\"\");\n  let [currentNum, setCurrentNum] = useState(\"\");\n  let [numbersCSVString, setNumbersCSVString] = useState(\"\");\n  let [numbers, setNumbers] = useState([]);\n  let [acepta, setAcepta] = useState(false);\n  let [testRun, setTestRun] = useState(false);\n  let [media, setMedia] = useState(0);\n  let [alpha, setAlpha] = useState(0);\n  let [limitI, setLimitI] = useState(0);\n  let [limitS, setLimitS] = useState(0);\n\n  useEffect(() => {\n    let temp = (alpha * 0.01) / Math.pow(12 * numbers.length, 0.5);\n    console.log(temp, alpha);\n    setLimitI(0.5 - temp);\n    setLimitS(0.5 + temp);\n  }, [alpha, numbers.length]);\n\n  useEffect(() => {\n    if (limitI < media && limitS > media) {\n      setAcepta(true);\n    }\n    if (media > 0) setTestRun(true);\n  }, [limitI, limitS, media]);\n  const addCSVValues = () => {\n    if (parseFloat(c)) {\n      let nums = numbersCSVString.split(\",\").map((e) => parseFloat(e));\n      standardNormalTable.forEach((val, index) => {\n        if (val === 1 - parseFloat(c) / 2) setAlpha(index);\n      });\n      setNumbers([...nums]);\n    }\n  };\n  const addValueToArray = () => {\n    setNumbers([...numbers, currentNum]);\n    setCurrentNum(\"\");\n  };\n\n  const calculateMed = () => {\n    if (numbers.length > 0) {\n      let sum = numbers.reduce((prev, curr) => {\n        console.log(prev, curr);\n        return (Number(prev) + Number(curr)).toFixed(4);\n      });\n      setMedia(sum / numbers.length);\n    }\n  };\n\n  return (\n    <div>\n      <div className=\"row d-flex justify-content-center\">\n        <h1>Prueba de Medias</h1>\n      </div>\n      <div className=\"form-group\">\n        <small>\n          <h7>Planteamiento de Hipotesis:</h7>\n          <div className=\"col-12\">\n            <h7>H0</h7>\n            <p>\n              Dado el ṝ = {media.toFixed(4)}, se encuentra dentro de los límites\n              y no se puede rechazar el planteamiento que el conjunto de números\n              tiene media 0.5, con un nivel de confianza {(1 - c) * 100}%\n            </p>\n          </div>\n          <div className=\"col-12\">\n            <h7>H1</h7>\n            <p>\n              Dado el ṝ = {media.toFixed(4)}, no se encuentra dentro de los\n              límites se puede rechazar el planteamiento que el conjunto de\n              números tiene media 0.5, con un nivel de confianza {(1 - c) * 100}\n              %\n            </p>\n          </div>\n        </small>\n        <div className=\"row\">\n          <div className=\"col-4 d-flex justify-content-between inputs\">\n            <label for=\"semilla\">Alpha:</label>\n            <input\n              id=\"semilla\"\n              type=\"text\"\n              value={c}\n              onChange={(e) => setC(e.target.value)}\n            />\n          </div>\n        </div>\n        <div className=\"row \">\n          <div className=\"col-6 d-flex flex-column\">\n            <div className=\"d-flex flex-column\">\n              <label for=\"csv\">Ingresar numeros separados por comas:</label>\n              <div className=\"d-flex\">\n                <textarea\n                  id=\"csv\"\n                  type=\"text\"\n                  value={numbersCSVString}\n                  onChange={(e) => setNumbersCSVString(e.target.value)}\n                />\n              </div>\n            </div>\n          </div>\n          <div className=\"col-6 d-flex flex-wrap inputs\">\n            {numbers.map((num) => {\n              return <p className=\"number-list\">{num}</p>;\n            })}\n          </div>\n        </div>\n        <div className=\"row\">\n          <button\n            className=\" col-2 btn btn-primary ml-auto p-2\"\n            onClick={(e) => addCSVValues()}\n          >\n            Agregar Numeros\n          </button>\n          <div className=\"col-2 d-flex justify-content-end inputs\">\n            <div className=\"btn btn-primary\" onClick={(e) => calculateMed()}>\n              Correr Prueba\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"row\">\n        {testRun ? (\n          <div>\n            {acepta ? (\n              <div>\n                <div className=\"card-body\">\n                  <h5 className=\"card-title\">\n                    Como el ṝ = {media.toFixed(5)}, se encuentra dentro de los\n                    límites y no se puede rechazar el planteamiento que el\n                    conjunto de números tiene media 0.5, con un nivel de\n                    confianza {(1 - c) * 100}%\n                  </h5>\n                  <div className=\"row\">\n                    <div className=\"col-6 d-flex\">\n                      <h2 className=\"card-text\">LI= {limitI.toFixed(5)}</h2>\n                      <h2 className=\"card-text ml-auto p-2\">\n                        LS= {limitS.toFixed(5)}\n                      </h2>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            ) : (\n              <div>\n                <div className=\"card-body\">\n                  <h5 className=\"card-title\">\n                    Como el ṝ = {media.toFixed(5)}, no se encuentra dentro de\n                    los límites y se puede rechazar el planteamiento que el\n                    conjunto de números tiene media 0.5, Con un nivel de\n                    confianza {(1 - c) * 100}%\n                  </h5>\n                  <div className=\"row\">\n                    <div className=\"col-6 d-flex\">\n                      <h2 className=\"card-text\">LI= {limitI.toFixed(5)}</h2>\n                      <h2 className=\"card-text ml-auto p-2\">\n                        LS= {limitS.toFixed(5)}\n                      </h2>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            )}\n          </div>\n        ) : (\n          \"\"\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default PruebaMedias;\n","import React, { useState } from \"react\";\nimport chiSquareInverse from \"inv-chisquare-cdf\";\n\nconst PruebaPoker = () => {\n  const [nums, setNums] = useState([]);\n  let [numbersCSVString, setNumbersCSVString] = useState(\"\");\n  let [testRun, setTestRun] = useState(false);\n  let [disable, setDisable] = useState(true);\n  let [fillAlpha, setFillAlpa] = useState(false);\n  let [numlist, setnumList] = useState([]);\n\n  const [categories, setCategories] = useState([\n    { todoDif: 0 },\n    { unPar: 0 },\n    { dosPares: 0 },\n    { unaTercia: 0 },\n    { terciaPar: 0 },\n    { poker: 0 },\n    { quintilla: 0 },\n  ]);\n  const [ei, setEi] = useState([\n    { todoDif: 0 },\n    { unPar: 0 },\n    { dosPares: 0 },\n    { unaTercia: 0 },\n    { terciaPar: 0 },\n    { poker: 0 },\n    { quintilla: 0 },\n  ]);\n  const [eiOi, setEiOi] = useState([\n    { todoDif: 0 },\n    { unPar: 0 },\n    { dosPares: 0 },\n    { unaTercia: 0 },\n    { terciaPar: 0 },\n    { poker: 0 },\n    { quintilla: 0 },\n    { total: 0 },\n  ]);\n\n  const [alpha, setAlpha] = useState(0);\n  const [x20, setx20] = useState(\"\");\n  const [chi2, setChi2] = useState(0);\n\n  const class5D = [\"TD\", \"1P\", \"2P\", \"1T\", \"TP\", \"P\", \"Q\"];\n  const prob5D = [0.3024, 0.504, 0.108, 0.009, 0.072, 0.0045, 0.0001];\n\n  const class3D = [\"TD\", \"1P\", \"T\"];\n  const prob3D = [0.72, 0.27, 0.01];\n\n  const class4D = [\"TD\", \"1P\", \"2P\", \"1T\", \"P\"];\n  const prob4D = [0.504, 0.432, 0.027, 0.036, 0.001];\n\n  const addCSVValues = () => {\n    let numberList = numbersCSVString.split(\",\");\n    setnumList(numberList);\n    let noNewLine = numberList.map((x) => x.replace(/(\\r\\n|\\n|\\r)/gm, \"\"));\n    console.log(\"original\", noNewLine);\n    var noDot = noNewLine.map((s) => s.substring(2));\n    console.log(\"NO DOT\", noDot);\n    var sorted = noDot.map((x) => {\n      let arr = x.split(\"\");\n      let sorted = arr.sort((a, b) => a - b);\n      let joinArr = sorted.join(\"\");\n\n      return joinArr;\n    });\n\n    setNums(sorted);\n    if (fillAlpha) {\n      setDisable(false);\n    } else {\n      setDisable(true);\n    }\n  };\n\n  const handleClasifications = () => {\n    let todoDif = 0;\n    let unPar = 0;\n    let dosPar = 0;\n    let unaTercia = 0;\n    let terciaPar = 0;\n    let poker = 0;\n    let quintilla = 0;\n    console.log(\"size:\", nums[0].length);\n\n    if (nums[0].length === 5) {\n      let arr = nums.map((str) => {\n        let first = str.split(str[0]).length - 1;\n        let second = str.split(str[1]).length - 1;\n        let third = str.split(str[2]).length - 1;\n        let fourth = str.split(str[3]).length - 1;\n        let fifth = str.split(str[4]).length - 1;\n\n        let all = [];\n        all.push(first);\n        all.push(second);\n        all.push(third);\n        all.push(fourth);\n        all.push(fifth);\n        console.log(all);\n        console.log(\"STR:\", str);\n\n        if (all.includes(5)) {\n          quintilla++;\n        } else if (all.includes(3) && all.includes(2)) {\n          terciaPar++;\n        } else if (all.includes(2) && all.includes(1)) {\n          let count = 0;\n          for (let i = 0; i < all.length; i++) {\n            if (all[i] === 2) {\n              count++;\n            }\n          }\n          if (count === 4) {\n            console.log(\"2P\");\n            dosPar++;\n          } else {\n            unPar++;\n            console.log(\"1P\");\n          }\n        } else if (all.includes(4)) {\n          console.log(\"Poker\");\n          poker++;\n        } else if (all.includes(3) && all.includes(1)) {\n          console.log(\"1T\");\n          unaTercia++;\n        } else {\n          console.log(\"TD\");\n          todoDif++;\n        }\n      });\n      let tempCat = {\n        todoDif: todoDif,\n        unPar: unPar,\n        dosPares: dosPar,\n        unaTercia: unaTercia,\n        terciaPar: terciaPar,\n        poker: poker,\n        quintilla: quintilla,\n      };\n      setCategories(tempCat);\n      return tempCat;\n    } else if (nums[0].length === 4) {\n      let arr = nums.map((str) => {\n        let first = str.split(str[0]).length - 1;\n        let second = str.split(str[1]).length - 1;\n        let third = str.split(str[2]).length - 1;\n        let fourth = str.split(str[3]).length - 1;\n\n        let all = [];\n        all.push(first);\n        all.push(second);\n        all.push(third);\n        all.push(fourth);\n        console.log(all);\n\n        if (all.includes(4)) {\n          poker++;\n        } else if (all.includes(3)) {\n          unaTercia++;\n        } else if (all.includes(2)) {\n          let count = 0;\n          for (let i = 0; i < all.length; i++) {\n            if (all[i] === 2) {\n              count++;\n            }\n          }\n          if (count === 4) {\n            console.log(\"2P\");\n            dosPar++;\n          } else {\n            unPar++;\n            console.log(\"1P\");\n          }\n        } else {\n          console.log(\"TD\");\n          todoDif++;\n        }\n      });\n\n      let tempCat = {\n        todoDif: todoDif,\n        unPar: unPar,\n        dosPares: dosPar,\n        unaTercia: unaTercia,\n        poker: poker,\n        terciaPar: 0,\n        quintilla: 0,\n      };\n\n      setCategories(tempCat);\n      return tempCat;\n    } else if (nums[0].length === 3) {\n      let arr = nums.map((str) => {\n        let first = str.split(str[0]).length - 1;\n        let second = str.split(str[1]).length - 1;\n        let third = str.split(str[2]).length - 1;\n\n        let all = [];\n        all.push(first);\n        all.push(second);\n        all.push(third);\n        console.log(all);\n\n        if (all.includes(3)) {\n          unaTercia++;\n        } else if (all.includes(2)) {\n          unPar++;\n        } else {\n          console.log(\"TD\");\n          todoDif++;\n        }\n      });\n\n      let tempCat = {\n        todoDif: todoDif,\n        unPar: unPar,\n        unaTercia: unaTercia,\n        poker: poker,\n        terciaPar: 0,\n        quintilla: 0,\n      };\n\n      setCategories(tempCat);\n      return tempCat;\n    }\n  };\n\n  const solve5D = () => {\n    let tempCat = handleClasifications();\n\n    if (nums[0].length === 5) {\n      let ei = prob5D.map((x) => parseFloat(x) * nums.length);\n      setEi({\n        todoDif: ei[0],\n        unPar: ei[1],\n        dosPares: ei[2],\n        unaTercia: ei[3],\n        terciaPar: ei[4],\n        poker: ei[5],\n        quintilla: ei[6],\n      });\n      let td = Math.pow(ei[0] - tempCat.todoDif, 2) / ei[0];\n      let unP = Math.pow(ei[1] - tempCat.unPar, 2) / ei[1];\n      let dosP = Math.pow(ei[2] - tempCat.dosPares, 2) / ei[2];\n      let unT = Math.pow(ei[3] - tempCat.unaTercia, 2) / ei[3];\n      let terciaP = Math.pow(ei[4] - tempCat.terciaPar, 2) / ei[4];\n      let p = Math.pow(ei[5] - tempCat.poker, 2) / ei[5];\n      let q = Math.pow(ei[6] - tempCat.quintilla, 2) / ei[6];\n      let total = td + unP + dosP + unT + terciaP + p + q;\n      setEiOi({\n        todoDif: td,\n        unPar: unP,\n        dosPares: dosP,\n        unaTercia: unT,\n        terciaPar: terciaP,\n        poker: p,\n        quintilla: q,\n        total: total,\n      });\n\n      setx20(total);\n      let chisq = chiSquareInverse.invChiSquareCDF(1 - alpha, 6);\n      setChi2(chisq);\n    } else if (nums[0].length === 4) {\n      let ei = prob4D.map((x) => parseFloat(x) * nums.length);\n      console.log(\"ENTRA:\", ei);\n      setEi({\n        todoDif: ei[0],\n        unPar: ei[1],\n        dosPares: ei[2],\n        unaTercia: ei[3],\n        terciaPar: 0,\n        poker: ei[4],\n        quintilla: 0,\n      });\n      let td = Math.pow(ei[0] - tempCat.todoDif, 2) / ei[0];\n      let unP = Math.pow(ei[1] - tempCat.unPar, 2) / ei[1];\n      let dosP = Math.pow(ei[2] - tempCat.dosPares, 2) / ei[2];\n      let unT = Math.pow(ei[3] - tempCat.unaTercia, 2) / ei[3];\n      let terciaP = 0;\n      let p = Math.pow(ei[4] - tempCat.poker, 2) / ei[4];\n      let q = 0;\n      let total = td + unP + dosP + unT + terciaP + p + q;\n      setEiOi({\n        todoDif: td,\n        unPar: unP,\n        dosPares: dosP,\n        unaTercia: unT,\n        terciaPar: 0,\n        poker: p,\n        quintilla: 0,\n        total: total,\n      });\n      console.log(total);\n      setx20(total);\n      let chisq = chiSquareInverse.invChiSquareCDF(1 - alpha, 6);\n      setChi2(chisq);\n      console.log(chisq);\n    } else if (nums[0].length === 3) {\n      let ei = prob3D.map((x) => parseFloat(x) * nums.length);\n      setEi({\n        todoDif: ei[0],\n        unPar: ei[1],\n        dosPares: 0,\n        unaTercia: ei[2],\n        terciaPar: 0,\n        poker: 0,\n        quintilla: 0,\n      });\n      let td = Math.pow(ei[0] - tempCat.todoDif, 2) / ei[0];\n      let unP = Math.pow(ei[1] - tempCat.unPar, 2) / ei[1];\n      let dosP = 0;\n      let unT = Math.pow(ei[2] - tempCat.unaTercia, 2) / ei[2];\n      let terciaP = 0;\n      let p = 0;\n      let q = 0;\n      let total = td + unP + dosP + unT + terciaP + p + q;\n      setEiOi({\n        todoDif: td,\n        unPar: unP,\n        dosPares: 0,\n        unaTercia: unT,\n        terciaPar: 0,\n        poker: 0,\n        quintilla: 0,\n        total: total,\n      });\n\n      setx20(total);\n      let chisq = chiSquareInverse.invChiSquareCDF(1 - alpha, 6);\n      setChi2(chisq);\n    }\n    setTestRun(true);\n  };\n\n  const handleConclusion = () => {\n    if (chi2 < x20) {\n      return (\n        <div>\n          <div className=\"card-header\">Se rechaza la hipotesis</div>\n          <div className=\"card-body\">\n            <h5 className=\"card-title\">\n              El estadístico X2o = {x20.toFixed(4)}, comparándolo con nuestro\n              estadístico de tabla = {chi2.toFixed(4)}, entonces rechazamos que\n              los números del conjunto sean independientes, con un nivel de\n              confianza {(1 - alpha) * 100}%\n            </h5>\n          </div>\n        </div>\n      );\n    } else {\n      return (\n        <div>\n          <div className=\"card-header\">No se puede rechazar la hipotesis</div>\n          <div className=\"card-body\">\n            <h5 className=\"card-title\">\n              El estadístico X2o = {x20.toFixed(4)}, comparándolo con nuestro\n              estadístico de tabla = {chi2.toFixed(4)}, entonces NO rechazamos\n              que los números del conjunto sean independientes, con un nivel de\n              confianza {(1 - alpha) * 100}%\n            </h5>\n          </div>\n        </div>\n      );\n    }\n  };\n\n  return (\n    <div>\n      <div className=\"row d-flex justify-content-center\">\n        <h1>Prueba de Poker</h1>\n      </div>\n\n      <small>\n        <h7>Planteamiento de Hipotesis:</h7>\n        <div className=\"col-12\">\n          <h7>H0</h7>\n          <p>\n            El estadístico X0^2 comparándolo con nuestro estadístico de tabla ,\n            entonces no rechazamos que los números del conjunto sean\n            independientes, con un nivel de confianza {(1 - alpha) * 100}%\n          </p>\n        </div>\n        <div className=\"col-12\">\n          <h7>H1</h7>\n          <p>\n            El estadístico X0^2, comparándolo con nuestro estadístico de tabla,\n            entonces rechazamos que los números del conjunto sean\n            independientes, con un nivel de confianza {(1 - alpha) * 100}%\n          </p>\n        </div>\n      </small>\n      <label for=\"semilla\">Alpha:</label>\n\n      <div className=\"row poker\">\n        <input\n          placeholder=\"Alpha\"\n          value={alpha}\n          onChange={(e) => {\n            setAlpha(e.target.value);\n            setFillAlpa(true);\n          }}\n        />\n      </div>\n      <div className=\"row\">\n        <div>\n          <p>\n            {\" \"}\n            Ingresa los numeros separados por comas y en formato \"0.Num\", no\n            \".Num\" :\n          </p>\n\n          <textarea\n            id=\"csv\"\n            type=\"text\"\n            value={numbersCSVString}\n            onChange={(e) => setNumbersCSVString(e.target.value)}\n          />\n        </div>\n        <div className=\"col-6 d-flex flex-wrap inputs\">\n          {numlist.map((num) => {\n            return <p className=\"number-list\">{num}</p>;\n          })}\n        </div>\n      </div>\n      <div className=\"btn btn-primary\" onClick={() => addCSVValues()}>\n        Agregar Numeros\n      </div>\n      <button\n        className=\"btn btn-primary\"\n        disabled={disable}\n        onClick={() => solve5D()}\n      >\n        Correr Prueba\n      </button>\n      {testRun ? (\n        <div>\n          <table className=\"table\">\n            <thead>\n              <tr>\n                <th scope=\"col\">Categorias</th>\n                <th scope=\"col\">Oi</th>\n                <th scope=\"col\">Ei</th>\n                <th scope=\"col\"> (Ei-Oi)^2/Ei </th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr>\n                <td>TD</td>\n                <td>{categories.todoDif}</td>\n                <td>{ei.todoDif.toFixed(4)}</td>\n                <td>{eiOi.todoDif.toFixed(4)}</td>\n              </tr>\n              <tr>\n                <td>1P</td>\n                <td>{categories.unPar}</td>\n                <td>{ei.unPar.toFixed(4)}</td>\n                <td>{eiOi.unPar.toFixed(4)}</td>\n              </tr>\n              <tr>\n                <td>2P</td>\n                <td>{categories.dosPares}</td>\n                <td>{ei.dosPares.toFixed(4)}</td>\n                <td>{eiOi.dosPares.toFixed(4)}</td>\n              </tr>\n              <tr>\n                <td>T</td>\n                <td>{categories.unaTercia}</td>\n                <td>{ei.unaTercia.toFixed(4)}</td>\n                <td>{eiOi.unaTercia.toFixed(4)}</td>\n              </tr>\n              <tr>\n                <td>TP</td>\n                <td>{categories.terciaPar}</td>\n                <td>{categories.terciaPar.toFixed(4)}</td>\n                <td>{eiOi.terciaPar.toFixed(4)}</td>\n              </tr>\n              <tr>\n                <td>P</td>\n                <td>{categories.poker}</td>\n                <td>{ei.poker.toFixed(4)}</td>\n                <td>{eiOi.poker.toFixed(4)}</td>\n              </tr>\n              <tr>\n                <td>Q</td>\n                <td>{categories.quintilla}</td>\n                <td>{ei.quintilla.toFixed(4)}</td>\n                <td>{eiOi.quintilla.toFixed(4)}</td>\n              </tr>\n              <tr>\n                <td>Total</td>\n                <td></td>\n                <td></td>\n                <td>{eiOi.total.toFixed(4)}</td>\n              </tr>\n              <tr>\n                <td></td>\n                <td></td>\n                <td>CHISQRINV </td>\n                <td>{chi2.toFixed(4)}</td>\n              </tr>\n            </tbody>\n          </table>\n          {handleConclusion()}\n        </div>\n      ) : (\n        \"\"\n      )}\n    </div>\n  );\n};\n\nexport default PruebaPoker;\n","import React, { useState, useEffect } from \"react\";\nimport chiSquareInverse from \"inv-chisquare-cdf\";\n\nconst PruebaSerie = () => {\n  let [cuadrants, setCuadrants] = useState([]);\n  let [c, setC] = useState(\"\");\n  let [m, setM] = useState(0);\n  let [currentNum, setCurrentNum] = useState(\"\");\n  let [numbersCSVString, setNumbersCSVString] = useState(\"\");\n  let [numbers, setNumbers] = useState([]);\n  let [numbersLength, setNumbersLength] = useState(0);\n  let [x2Total, setX2Total] = useState(0);\n  let [acepta, setAcepta] = useState(false);\n  let [testRun, setTestRun] = useState(false);\n  let [alpha, setAlpha] = useState(0.05);\n  let [chiValue, setChiValue] = useState(0);\n  let [testTable, setTestTable] = useState([]);\n\n  useEffect(() => {\n    if (chiValue > x2Total) {\n      setAcepta(true);\n    }\n    if (testTable.length > 0) setTestRun(true);\n  }, [x2Total, chiValue, testTable.length]);\n\n  useEffect(() => {\n    let degreeFreed = m > 2 ? m - 1 : 1;\n    setChiValue(chiSquareInverse.invChiSquareCDF(1 - alpha / 2, degreeFreed));\n  }, [alpha, m]);\n\n  const addCSVValues = () => {\n    if (parseFloat(c)) {\n      let nums = numbersCSVString.split(\",\").map((e) => parseFloat(e));\n      setAlpha(parseFloat(c));\n      setNumbers([...nums]);\n      setNumbersLength(nums.length);\n    }\n  };\n  const addValueToArray = () => {\n    let temp = [...numbers, currentNum];\n    setNumbers(temp);\n    setNumbersLength(temp.length);\n    setCurrentNum(\"\");\n  };\n\n  const closestSquareTable = (m) => {\n    let notFound = true;\n    let i = 0;\n    while (notFound) {\n      let ibase2 = Math.pow(i, 2);\n      if (m > ibase2) {\n        i++;\n      } else if (m < ibase2) {\n        m = ibase2;\n        notFound = false;\n      } else if (m == ibase2) {\n        notFound = false;\n      }\n    }\n    return m;\n  };\n\n  const calculateSeriesTest = () => {\n    if (numbers.length > 0) {\n      let nums = [...numbers];\n      let divs = Math.sqrt(numbersLength);\n      let tempM = closestSquareTable(divs);\n      let coordinates = [];\n      console.log(tempM);\n      setM(tempM);\n      let ei = numbersLength / tempM;\n      for (let i = 0; i < numbersLength - 1; i++) {\n        coordinates.push({ xValue: nums[i], yValue: nums[i + 1] });\n      }\n      let base = Math.sqrt(tempM);\n      let coordX = 0;\n      let coordY = 0;\n      let range = 1 / base;\n      let tableCuadrnts = [];\n      for (let i = 0; i < base; i++) {\n        for (let j = 0; j < base; j++) {\n          tableCuadrnts.push({\n            lowerX: coordX,\n            higherX: coordX + range,\n            lowerY: coordY,\n            higherY: coordY + range,\n          });\n          coordY += range;\n        }\n        coordX += range;\n        coordY = 0;\n      }\n      setCuadrants(tableCuadrnts);\n\n      let ammountByCuadrant = [];\n      for (let i = 0; i < tableCuadrnts.length; i++) {\n        for (let j = 0; j < coordinates.length; j++) {\n          if (\n            coordinates[j].xValue > tableCuadrnts[i].lowerX &&\n            coordinates[j].xValue < tableCuadrnts[i].higherX &&\n            coordinates[j].yValue > tableCuadrnts[i].lowerY &&\n            coordinates[j].yValue < tableCuadrnts[i].higherY\n          ) {\n            ammountByCuadrant.push(i);\n          }\n        }\n      }\n\n      let tempOi = new Array(tableCuadrnts.length).fill(0);\n\n      for (let i = 0; i < ammountByCuadrant.length; i++) {\n        tempOi[ammountByCuadrant[i]]++;\n      }\n\n      let tempx2Vals = [];\n      let tempx2TotalVal = 0;\n      for (let i = 0; i < tempM; i++) {\n        console.log(ei);\n        tempx2Vals[i] = parseFloat(Math.pow(ei - tempOi[i], 2) / ei);\n        tempx2TotalVal += tempx2Vals[i];\n      }\n      setX2Total(tempx2TotalVal);\n\n      let tempTestTable = [];\n      for (let i = 0; i < tableCuadrnts.length; i++) {\n        tempTestTable.push({\n          interval: i + 1,\n          oi: tempOi[i],\n          ei: ei,\n          x2: tempx2Vals[i],\n        });\n      }\n      setTestTable(tempTestTable);\n    }\n  };\n\n  return (\n    <div>\n      <div className=\"row d-flex justify-content-center\">\n        <h1>Prueba de Series</h1>\n      </div>\n\n      <small>\n        <h7>Planteamiento de hipotesis:</h7>\n        <div className=\"col-12\">\n          <h7>H0</h7>\n          <p>\n            {\" \"}\n            El estadístico de tabla = (valor de la tabla de chi cuadrada) es\n            mayor al error total (valor obtenido de X0^2), entonces no se puede\n            rechazar que los números del conjunto consecutivos sean\n            independientes, con un nivel de confianza {(1 - c) * 100}%\n          </p>\n        </div>\n        <div className=\"col-12\">\n          <h7>H1</h7>\n          <p>\n            El estadístico de tabla = (valor de la tabla de chi cuadrada) es\n            menor al error total (valor obtenido de X0^2), entonces rechazamos\n            que los números del conjunto consecutivos sean independientes, con\n            un nivel de confianza {(1 - c) * 100}%\n          </p>\n        </div>\n      </small>\n      <div className=\"form-group\">\n        <div className=\"row\">\n          <div className=\"col-4 d-flex justify-content-between inputs\">\n            <label for=\"semilla\">Alpha:</label>\n            <input\n              id=\"semilla\"\n              type=\"text\"\n              value={c}\n              onChange={(e) => setC(e.target.value)}\n            />\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col-6 d-flex flex-column\">\n            <div className=\"d-flex flex-column\">\n              <label for=\"csv\">Ingresa los numeros separados por comas:</label>\n              <div className=\"d-flex\">\n                <textarea\n                  id=\"csv\"\n                  type=\"text\"\n                  value={numbersCSVString}\n                  onChange={(e) => setNumbersCSVString(e.target.value)}\n                />\n              </div>\n            </div>\n          </div>\n          <div className=\"col-6 d-flex flex-wrap inputs\">\n            {numbers.map((num) => {\n              return <p className=\"number-list\">{num}</p>;\n            })}\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col-4 d-flex justify-content-end inputs\">\n            <div\n              className=\"btn btn-primary ml-auto p-2\"\n              onClick={(e) => addCSVValues()}\n            >\n              Agregar Numeros\n            </div>\n            <div\n              className=\"btn btn-primary\"\n              onClick={(e) => calculateSeriesTest()}\n            >\n              Correr Prueba\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"row\">\n        {testRun ? (\n          <div>\n            <table className=\"table\">\n              <thead>\n                <tr>\n                  <th>Intervalo</th>\n                  <th>Oi</th>\n                  <th>Ei = n/m</th>\n                  <th>(Ei-Oi)^2/Ei</th>\n                </tr>\n              </thead>\n              <tbody>\n                {testTable.map((e) => {\n                  {\n                    return (\n                      <tr>\n                        <td>{e.interval.toFixed(4)}</td>\n                        <td>{e.oi.toFixed(4)}</td>\n                        <td>{e.ei.toFixed(4)}</td>\n                        <td>{e.x2.toFixed(4)}</td>\n                      </tr>\n                    );\n                  }\n                })}\n              </tbody>\n            </table>\n            {acepta ? (\n              <div>\n                <div className=\"card-body\">\n                  <h5 className=\"card-title\">\n                    Como el estadístico calculado {x2Total.toFixed(4)}, es menor\n                    al estadístico de las tablas no se puede rechazar que los\n                    números sigan una distribución uniforme continua, con un\n                    nivel de confianza {(1 - c) * 100}%\n                  </h5>\n                  <div className=\"row\">\n                    <div className=\"col-6 d-flex\">\n                      <h2 className=\"card-text\">\n                        Valor de la tabla: {chiValue.toFixed(4)}\n                      </h2>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            ) : (\n              <div>\n                <div className=\"card-body\">\n                  <h5 className=\"card-title\">\n                    Como el estadístico calculado {x2Total}, es mayor al\n                    estadístico de las tablas se puede rechazar que los números\n                    sigan una distribución uniforme continua , con un nivel de\n                    confianza {(1 - c) * 100}%\n                  </h5>\n                  <div className=\"row\">\n                    <div className=\"col-6 d-flex\">\n                      <h2 className=\"card-text\">\n                        Valor de la tabla: {chiValue.toFixed(4)}\n                      </h2>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            )}\n          </div>\n        ) : (\n          \"\"\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default PruebaSerie;\n","import React, { useState } from \"react\";\nimport { getKormorovSmirnov } from \"../../services/kolmogorovSmirnov\";\n\nconst Kolmogorov = () => {\n  let [numeros, setNumeros] = useState(\"\");\n  let [N, setN] = useState(0);\n  let [c, setC] = useState(0.95);\n  let [alpha, setAlpha] = useState(0.0);\n  let [Dmas, setDmas] = useState(0);\n  let [Dmenos, setDmenos] = useState(0);\n  let [Dna, setDna] = useState(0);\n  let [Hipot, setHipot] = useState(\"\");\n  let [numlist, setNumlist] = useState([]);\n\n  const prueba = () => {\n    if (parseFloat(c) < 0 || parseFloat(c) > 1) {\n      alert(\"Insertar nivel de aceptacion entre 0 y 1\");\n      return;\n    }\n\n    let tempArr = numeros.split(\",\");\n    let n = tempArr.length;\n    setN(n);\n    setNumlist(tempArr);\n\n    if (n > 20) {\n      alert(\"La prueba no se puede realizar con mas de 20 numeros\");\n      return;\n    }\n\n    tempArr.sort((a, b) => parseFloat(a) - parseFloat(b));\n    let arr1 = [];\n    let arr3 = [];\n    let arr4 = [];\n    let arr5 = [];\n    for (let i = 0; i < n; i++) {\n      arr1[i] = (i + 1) / n;\n      arr3[i] = i / n;\n      arr4[i] = parseFloat((arr1[i] - tempArr[i]).toFixed(4));\n      arr5[i] = parseFloat((tempArr[i] - arr3[i]).toFixed(4));\n    }\n    let table = [];\n    table[0] = [0.995, 0.99, 0.975, 0.95, 0.9];\n    table[1] = [0.9293, 0.9, 0.8418, 0.7763, 0.6837];\n    table[2] = [0.829, 0.7845, 0.7076, 0.636, 0.5648];\n    table[3] = [0.7342, 0.6888, 0.6239, 0.5652, 0.4926];\n    table[4] = [0.6685, 0.6271, 0.5632, 0.5094, 0.4469];\n    table[5] = [0.6166, 0.5774, 0.5192, 0.4679, 0.4103];\n    table[6] = [0.5758, 0.5384, 0.4834, 0.436, 0.3814];\n    table[7] = [0.5418, 0.5065, 0.4542, 0.4096, 0.3582];\n    table[8] = [0.5133, 0.4796, 0.43, 0.3874, 0.339];\n    table[9] = [0.4889, 0.4566, 0.4092, 0.3686, 0.3225];\n    table[10] = [0.4677, 0.4367, 0.3912, 0.3524, 0.3082];\n    table[11] = [0.449, 0.4191, 0.3754, 0.3381, 0.2957];\n    table[12] = [0.4324, 0.4036, 0.3614, 0.3254, 0.2846];\n    table[13] = [0.4176, 0.3897, 0.3448, 0.3141, 0.2747];\n    table[14] = [0.4042, 0.3771, 0.3376, 0.3039, 0.2658];\n    table[15] = [0.392, 0.3657, 0.3283, 0.2947, 0.2577];\n    table[16] = [0.3808, 0.3552, 0.3179, 0.2862, 0.2503];\n    table[17] = [0.3706, 0.3456, 0.3093, 0.2785, 0.2435];\n    table[18] = [0.3611, 0.3368, 0.3014, 0.2713, 0.2435];\n    table[19] = [0.3524, 0.3286, 0.294, 0.2647, 0.2315];\n\n    let d_max = Math.max(...arr4);\n    let d_min = Math.abs(Math.min(...arr5));\n    setDmas(d_max);\n    setDmenos(d_min);\n\n    let d_value = d_max > d_min ? d_max : d_min;\n    let tempAlp = (1 - parseFloat(c)).toFixed(2);\n\n    setAlpha(tempAlp);\n    let d_table;\n\n    switch (parseFloat(tempAlp)) {\n      case 0.01:\n        d_table = table[n - 1][0];\n        break;\n      case 0.02:\n        d_table = table[n - 1][1];\n        break;\n      case 0.05:\n        d_table = table[n - 1][2];\n        break;\n      case 0.1:\n        d_table = table[n - 1][3];\n        break;\n      case 0.2:\n        d_table = table[n - 1][4];\n        break;\n      default:\n        d_table = 0;\n        break;\n    }\n\n    console.log(d_table, tempAlp);\n    setDna(d_table);\n\n    let hipot =\n      d_table > d_value\n        ? `Como D α,𝑛 =${Dna} > D =${Dmas} no se puede rechazar que los números se distribuyen uniformemente`\n        : `ComoD α,𝑛 =${Dna} < D =${Dmas} se puede rechazar que los números se distribuyen uniformemente`;\n    setHipot(hipot);\n  };\n\n  return (\n    <div>\n      <div className=\"row\">\n        <h1>Prueba Uniformidad Kolmogorov-Smirnov</h1>\n      </div>\n      <br />\n      <small>\n        <div className=\"col-12\">\n          <h7>H0</h7>\n          <p>\n            Como el D = {Dmas.toFixed(4)}, se encuentra tiene un valor menor al\n            de la tabla {Dna.toFixed(4)} no se puede rechazar el planteamiento\n            que los números se distribuyen uniformemente, con un nivel de\n            confianza: {c}\n          </p>\n        </div>\n        <div className=\"col-12\">\n          <h7>H1</h7>\n          <p>\n            Como el D = {Dmas.toFixed(4)}, se encuentra tiene un valor mayor al\n            de la tabla {Dna.toFixed(4)} se puede rechazar el planteamiento que\n            los números se distribuyen uniformemente, con un nivel de confianza:{\" \"}\n            {c}\n          </p>\n        </div>\n      </small>\n      <div className=\"form-group\">\n        <div className=\"row\">\n          <div className=\"col-4\">\n            <label htmlFor=\"semilla\">\n              Ingresar nivel de confianza(Entre 0-1), NO Alpha:\n            </label>\n            <input\n              id=\"semilla\"\n              type=\"text\"\n              className=\"form-control\"\n              value={c}\n              onChange={(e) => setC(e.target.value)}\n            />\n          </div>\n        </div>\n\n        <div className=\"row\">\n          <div className=\"col-6 d-flex flex-column\">\n            <div className=\"d-flex flex-column\">\n              <label for=\"csv\">Ingresa los numeros separados por comas:</label>\n              <div className=\"d-flex\">\n                <textarea\n                  id=\"csv\"\n                  type=\"text\"\n                  value={numeros}\n                  onChange={(e) => setNumeros(e.target.value)}\n                />\n              </div>\n            </div>\n          </div>\n          <div className=\"col-6 d-flex flex-wrap inputs\">\n            {numlist.map((num) => {\n              return <p className=\"number-list\">{num}</p>;\n            })}\n          </div>\n        </div>\n      </div>\n      <div className=\"row text-right\">\n        <div>\n          <div className=\"btn btn-primary\" onClick={(e) => prueba()}>\n            Correr Prueba\n          </div>\n        </div>\n      </div>\n      <br />\n      <div className=\"row\">\n        <div className=\"col-12\">\n          <table className=\"table text-center\">\n            <thead>\n              <tr>\n                <th scope=\"col\">Alpha</th>\n                <th scope=\"col\">D+</th>\n                <th scope=\"col\">D-</th>\n                <th scope=\"col\">Da,n</th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr>\n                <td>{alpha}</td>\n                <td>{Dmas}</td>\n                <td>{Dmenos}</td>\n                <td>{Dna}</td>\n              </tr>\n            </tbody>\n          </table>\n          <br />\n\n          <div className=\"card-body\">\n            <h5 className=\"card-title\">{Hipot}</h5>\n            <div className=\"row\">\n              <div className=\"col-6 d-flex\">\n                <h2 className=\"card-text\">D= {Dmas}</h2>\n                <h2 className=\"card-text ml-auto p-2\">D de tabla= {Dna}</h2>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Kolmogorov;\n","import React, { useState, useEffect } from \"react\";\n\nconst MetodoConvolucion = () => {\n  let [distSelected, setDistSelected] = useState(0);\n  let [distName, setDistName] = useState(\"Selecciona una Distribución\");\n  let [distFormulaStr, setDistFormulaStr] = useState(\"\");\n  let [display, setDisplay] = useState(false);\n  // ERLANG\n  let [num_erlang, setNum_erlang] = useState(0);\n  let [media_erlang, setMedia_erlang] = useState(0);\n  let [cantidad_piezas_erlang, setCantidad_piezas_erlang] = useState(0);\n  let [valores_Xi_erlang, setValores_Xi_erlang] = useState([]);\n  let [erlangResult, setErlangResult] = useState([]);\n\n  // NORMAL\n  let [norMedia, setNorMedia] = useState(0);\n  let [norDS, setNorDS] = useState(0);\n  let [norRandomN, setNorRandomN] = useState(0);\n  let [norResults, setNorResults] = useState([]);\n  // BINOMIAL\n  let [biProb, setBiProb] = useState(0);\n  let [biN, setBiN] = useState(0);\n  let [biDef, setBiDef] = useState([]);\n\n  useEffect(() => {\n    if (distSelected === 1) {\n      setDistName(\"Erlang\");\n      setDistFormulaStr(\"𝑌=𝐸𝑅𝑖=−1/𝑘𝜆 𝑙𝑛 ∏(𝑖=1)^𝑘:(1−𝑟𝑖) \");\n    } else if (distSelected === 2) {\n      setDistName(\"Normal\");\n      setDistFormulaStr(\"𝑋=𝑁𝑖= [∑_(𝑖=1)^12:(𝑟𝑖) −6 ]+𝜎+𝜇\");\n    } else if (distSelected === 3) {\n      setDistName(\"Binomial\");\n      setDistFormulaStr(\"𝑌=𝐵𝑖=𝐵𝐸1+𝐵𝐸2+ …+𝐵𝐸𝑁 ~𝐵𝐼(𝑁,𝑝)\");\n    }\n  }, [distSelected]);\n\n  const calcDistErlang = () => {\n    let num_random = [];\n    let valores_Xi = [];\n    let result = [];\n\n    for (let i = 0; i < num_erlang; i++) {\n      num_random.push([]);\n      for (let e = 0; e < cantidad_piezas_erlang; e++) {\n        num_random[i][e] = parseFloat(\n          (1 - (Math.random() * (0.9999 - 0.0001) + 0.0001)).toFixed(4)\n        );\n      }\n    }\n\n    let multi = 1;\n    for (let i = 0; i < cantidad_piezas_erlang; i++) {\n      for (let j = 0; j < num_erlang; j++) {\n        multi *= num_random[j][i];\n      }\n      let value = ((-media_erlang / num_erlang) * Math.log(multi)).toFixed(4);\n      valores_Xi.push(value);\n      multi = 1;\n    }\n\n    for (let i = 0; i < cantidad_piezas_erlang; i++) {\n      let rs = [];\n      for (let j = 0; j < num_erlang; j++) {\n        rs.push(num_random[j][i]);\n      }\n      let obj = {\n        rs: rs.toString(),\n        y: valores_Xi[i],\n      };\n      result.push(obj);\n    }\n\n    setValores_Xi_erlang(valores_Xi);\n    setErlangResult(result);\n    console.log(\"num random\", num_random);\n    console.log(\"valores xi\", valores_Xi);\n  };\n\n  const calcDistNormal = () => {\n    let num_random = [];\n    let valores_Xi = [];\n    let suma_r = [];\n    let resta_r = [];\n    let tabla = [];\n\n    for (let i = 0; i < norRandomN * 12; i++) {\n      num_random[i] = parseFloat(\n        (1 - (Math.random() * (0.9999 - 0.0001) + 0.0001)).toFixed(4)\n      );\n    }\n\n    for (let i = 0; i < norRandomN * 12; i += 12) {\n      let count = 0;\n      for (let e = 0; e < 12; e++) {\n        count += num_random[i + e];\n      }\n      suma_r.push(count.toFixed(4));\n      resta_r.push((count - 6).toFixed(4));\n    }\n\n    for (let i = 0; i < norRandomN; i++) {\n      valores_Xi[i] = parseFloat(resta_r[i]) + norDS + norMedia;\n    }\n\n    for (let i = 0; i < norRandomN; i++) {\n      let obj = {\n        suma: suma_r[i],\n        resta: resta_r[i],\n        xi: valores_Xi[i],\n      };\n      tabla.push(obj);\n    }\n\n    setNorResults(tabla);\n    /*\n        console.log(\"num random\", num_random);\n        console.log(\"valores xi\", valores_Xi);\n        console.log(\"suma_r\", suma_r)*/\n  };\n\n  const calcDistBinomial = () => {\n    let num_random = [];\n    let valores_Xi = [];\n    let error = 1 - biProb * 0.01;\n    let valores_df = [];\n\n    for (let i = 0; i < biN; i++) {\n      num_random.push([]);\n      valores_Xi.push([]);\n      for (let e = 0; e < biN; e++) {\n        num_random[i][e] = parseFloat(\n          (1 - (Math.random() * (0.9999 - 0.0001) + 0.0001)).toFixed(4)\n        );\n      }\n    }\n\n    for (let i = 0; i < biN; i++) {\n      for (let j = 0; j < biN; j++) {\n        if (num_random[j][i] <= error) {\n          valores_Xi[j][i] = 1;\n        } else {\n          valores_Xi[j][i] = 0;\n        }\n      }\n    }\n\n    for (let i = 0; i < biN; i++) {\n      let count = 0;\n      for (let j = 0; j < biN; j++) {\n        if (valores_Xi[j][i] === 1) {\n          count++;\n        }\n      }\n      valores_df.push(count);\n    }\n\n    setBiDef(valores_df);\n    console.log(\"num random\", num_random);\n    console.log(\"valores xi\", valores_Xi);\n    console.log(\"valores df\", valores_df);\n  };\n\n  const calculate = () => {\n    if (distSelected === 1) {\n      calcDistErlang();\n    } else if (distSelected === 2) {\n      calcDistNormal();\n    } else if (distSelected === 3) {\n      calcDistBinomial();\n    }\n    setDisplay(true);\n  };\n\n  return (\n    <div>\n      <div className=\"row d-flex justify-content-center\">\n        <h1>Metodo de Convolución</h1>\n      </div>\n\n      <div className=\"form-group\">\n        <div className=\"row d-flex justify-content-center\">\n          <div className=\"dropdown\">\n            <button\n              className=\"btn btn-primary dropdown-toggle\"\n              type=\"button\"\n              id=\"dropdownMenuButton\"\n              data-toggle=\"dropdown\"\n              aria-haspopup=\"true\"\n              aria-expanded=\"false\"\n            >\n              {distName}\n            </button>\n            <div className=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton\">\n              <div\n                className=\"dropdown-item\"\n                onClick={(e) => setDistSelected(1)}\n              >\n                Erlang\n              </div>\n              <div\n                className=\"dropdown-item\"\n                onClick={(e) => setDistSelected(2)}\n              >\n                Normal\n              </div>\n              <div\n                className=\"dropdown-item\"\n                onClick={(e) => setDistSelected(3)}\n              >\n                Binomial\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* ERLANG */}\n      {distSelected === 1 && (\n        <div>\n          <div>\n            <h3 className=\"row d-flex justify-content-center\">\n              {distFormulaStr}\n            </h3>\n          </div>\n          <div className=\"form-group\">\n            <div className=\"input-group mb-3\">\n              <h3>Erlang: </h3>\n\n              <input\n                type=\"number\"\n                min=\"100\"\n                max=\"999999\"\n                onChange={(e) => setNum_erlang(e.target.value * 1)}\n              />\n            </div>\n\n            <div className=\"input-group mb-3\">\n              <h3>Media: </h3>\n\n              <input\n                type=\"number\"\n                min=\"100\"\n                max=\"999999\"\n                onChange={(e) => setMedia_erlang(e.target.value * 1)}\n              />\n            </div>\n\n            <div className=\"input-group mb-3\">\n              <h3>Piezas: </h3>\n              <input\n                type=\"number\"\n                min=\"100\"\n                max=\"999999\"\n                onChange={(e) => setCantidad_piezas_erlang(e.target.value * 1)}\n              />\n            </div>\n\n            <div className=\"input-group mb-3\">\n              <div className=\"btn btn-primary\" onClick={(e) => calculate()}>\n                Calcular\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n      {display && distSelected === 1 && (\n        <table className=\"table\">\n          <thead>\n            <tr>\n              <th scope=\"col\">#</th>\n              <th scope=\"col\">Ri</th>\n              <th scope=\"col\">Xi</th>\n            </tr>\n          </thead>\n          <tbody>\n            {erlangResult.map((e, k) => {\n              return (\n                <tr key={k}>\n                  <td>{k + 1}</td>\n                  <td>{e.rs}</td>\n                  <td>{e.y}</td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n      )}\n      {/* NORMAL */}\n      {distSelected === 2 && (\n        <div>\n          <div>\n            <h3 className=\"row d-flex justify-content-center\">\n              {distFormulaStr}\n            </h3>\n          </div>\n          <div className=\"form-group\">\n            <div className=\"input-group mb-3\">\n              <h3>Media: </h3>\n\n              <input\n                type=\"number\"\n                min=\"100\"\n                max=\"999999\"\n                onChange={(e) => setNorMedia(e.target.value * 1)}\n              />\n            </div>\n\n            <div className=\"input-group mb-3\">\n              <h3>Desviacion estandar: </h3>\n\n              <input\n                type=\"number\"\n                min=\"100\"\n                max=\"999999\"\n                onChange={(e) => setNorDS(e.target.value * 1)}\n              />\n            </div>\n\n            <div className=\"input-group mb-3\">\n              <h3>Numero de Variables Aleatorias: </h3>\n\n              <input\n                type=\"number\"\n                min=\"100\"\n                max=\"999999\"\n                onChange={(e) => setNorRandomN(e.target.value * 1)}\n              />\n            </div>\n\n            <div className=\"input-group mb-3\">\n              <div className=\"btn btn-primary\" onClick={(e) => calculate()}>\n                Calcular\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n      {display && distSelected === 2 && (\n        <table className=\"table\">\n          <thead>\n            <tr>\n              <th scope=\"col\">#</th>\n              <th scope=\"col\">suma</th>\n              <th scope=\"col\">resta</th>\n              <th scope=\"col\">xi</th>\n            </tr>\n          </thead>\n          <tbody>\n            {norResults.map((e, k) => {\n              return (\n                <tr scope=\"row\" key={k}>\n                  <td>{k + 1}</td>\n                  <td>{e.suma}</td>\n                  <td>{e.resta}</td>\n                  <td>{e.xi.toFixed(4)}</td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n      )}\n      {/* BINOMIAL */}\n      {distSelected === 3 && (\n        <div>\n          <div>\n            <h3 className=\"row d-flex justify-content-center\">\n              {distFormulaStr}\n            </h3>\n          </div>\n          <div className=\"form-group\">\n            <div className=\"input-group mb-3\">\n              <h3>Numero de Variables Aleatorias: </h3>\n\n              <input\n                type=\"number\"\n                min=\"100\"\n                max=\"999999\"\n                onChange={(e) => setBiN(e.target.value * 1)}\n              />\n            </div>\n\n            <div className=\"input-group mb-3\">\n              <h3>\n                Probabilidad de Exito(<small>En decimal</small>):{\" \"}\n              </h3>\n\n              <input\n                type=\"number\"\n                min=\"100\"\n                max=\"999999\"\n                onChange={(e) => setBiProb(e.target.value * 1)}\n              />\n            </div>\n\n            <div className=\"input-group mb-3\">\n              <div className=\"btn btn-primary\" onClick={(e) => calculate()}>\n                Calcular\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n      {display && distSelected === 3 && (\n        <table className=\"table\">\n          <thead>\n            <tr>\n              <th scope=\"col\">#</th>\n              <th scope=\"col\">Defectos</th>\n            </tr>\n          </thead>\n          <tbody>\n            {biDef.map((e, k) => {\n              return (\n                <tr scope=\"row\" key={k}>\n                  <td>{k + 1}</td>\n                  <td>{e}</td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n      )}\n    </div>\n  );\n};\n\nexport default MetodoConvolucion;\n","import React, { useState, useEffect } from \"react\";\n\nconst MetodoTransformadaInversa = () => {\n  let [rawList, setRawList] = useState(\"\");\n  let [distSelected, setDistSelected] = useState(0);\n  let [distName, setDistName] = useState(\"Selecciona una Distribución\");\n  let [distFormulaStr, setDistFormulaStr] = useState(\"\");\n  let [display, setDisplay] = useState(false);\n  let [uniVarA, setUniVarA] = useState(0);\n  let [uniVarBmA, setUniVarBmA] = useState(0);\n  let [uniResults, setUniResults] = useState([]);\n  let [expVarDelta, setExpVarDelta] = useState(0);\n  let [expResults, setExpResults] = useState([]);\n  let [berVarSuccess, setBerVarSuccess] = useState(0);\n  let [berResults, setBerResults] = useState([]);\n  let [poiVarProbSize, setPoiVarProbSize] = useState(0);\n  let [poiVarDelta, setPoiVarDelta] = useState(0);\n  let [poiResults, setPoiResults] = useState([]);\n\n  useEffect(() => {\n    if (distSelected === 1) {\n      setDistName(\"Uniforme\");\n      setDistFormulaStr(\"𝑥𝑖=𝑎+(𝑏−𝑎)𝑟𝑖\");\n    } else if (distSelected === 2) {\n      setDistName(\"Exponencial\");\n      setDistFormulaStr(\"𝑥𝑖=−1/𝜆 ln⁡(1−𝑟𝑖)\");\n    } else if (distSelected === 3) {\n      setDistName(\"Bernoulli\");\n      setDistFormulaStr(\"𝑝(𝑋)=𝑝^𝑥 (1−𝑝)^(1−𝑥)\");\n    } else if (distSelected === 4) {\n      setDistName(\"Poisson\");\n      setDistFormulaStr(\"𝑝(𝑥)=  (𝜆^𝑥 𝑒^(−𝜆))/𝑥!\");\n    }\n  }, [distSelected]);\n\n  const calcDistUniforme = (list) => {\n    let tempUniResults = [];\n    list.forEach((ri) => {\n      let obj = {\n        ri: ri,\n        xi: uniVarA + uniVarBmA * ri,\n      };\n      tempUniResults.push(obj);\n    });\n    setUniResults(tempUniResults);\n  };\n\n  const calcDistExponencial = (list) => {\n    let tempExpResults = [];\n    list.forEach((ri) => {\n      let obj = {\n        ri: ri,\n        xi: Math.log(1 - ri) * (1 / expVarDelta) * -1,\n      };\n      tempExpResults.push(obj);\n    });\n    setExpResults(tempExpResults);\n  };\n\n  const calcDistBernoulli = (list) => {\n    let tempBerResults = [];\n    list.forEach((ri) => {\n      let obj = {\n        ri: ri,\n        xi: ri >= berVarSuccess ? 1 : 0,\n      };\n      tempBerResults.push(obj);\n    });\n    setBerResults(tempBerResults);\n  };\n\n  const factorial = (num) => {\n    let rval = 1;\n    for (let i = 2; i <= num; i++) rval = rval * i;\n    return rval;\n  };\n\n  const getProbabilityForPoisson = () => {\n    let table = [];\n    let acumPx = 0;\n    for (let i = 0; i <= poiVarProbSize; i++) {\n      let px =\n        (Math.pow(poiVarDelta, i) * Math.exp(-poiVarDelta)) / factorial(i);\n      acumPx += px;\n      let obj = {\n        x: i,\n        px: px.toFixed(4),\n        acum: acumPx.toFixed(4),\n      };\n      table.push(obj);\n    }\n    return table;\n  };\n\n  const findInProbTable = (table, needle) => {\n    let prevAcum = 0;\n\n    for (let i = 0; i <= poiVarProbSize; i++) {\n      if (needle >= prevAcum && needle <= table[i].acum) {\n        return table[i].x;\n      }\n      prevAcum = table[i].acum;\n    }\n    return 0;\n  };\n\n  const calcDistPoisson = (list) => {\n    let table = getProbabilityForPoisson();\n    let tempPoissonResults = [];\n    list.forEach((ri) => {\n      let obj = {\n        ri: ri,\n        xi: findInProbTable(table, ri),\n      };\n      tempPoissonResults.push(obj);\n    });\n    setPoiResults(tempPoissonResults);\n  };\n\n  const calculate = () => {\n    let list = inputToList();\n\n    if (distSelected === 1) {\n      calcDistUniforme(list);\n    } else if (distSelected === 2) {\n      calcDistExponencial(list);\n    } else if (distSelected === 3) {\n      calcDistBernoulli(list);\n    } else if (distSelected === 4) {\n      calcDistPoisson(list);\n    }\n    setDisplay(true);\n  };\n\n  const inputToList = () => {\n    let cleanedList = rawList.split(\",\").map((x) => {\n      return x.trim() * 1;\n    });\n    return cleanedList;\n  };\n\n  return (\n    <div className=\"row\">\n      <div className=\"d-flex justify-content-center\">\n        <h1>Metodo de transformada Inversa</h1>\n      </div>\n      <div className=\"col-6 form-group\">\n        <div className=\"d-flex flex-column\">\n          <label for=\"csv\">\n            Ingresa los numeros separados por comas y luego elija la\n            distribucion correspondiente:\n          </label>\n          <div className=\"d-flex\">\n            <textarea\n              id=\"csv\"\n              type=\"text\"\n              value={rawList}\n              onChange={(e) => setRawList(e.target.value)}\n            />\n          </div>\n        </div>\n\n        <div className=\"row\">\n          <div className=\"dropdown\">\n            <button\n              className=\"btn btn-primary dropdown-toggle\"\n              type=\"button\"\n              id=\"dropdownMenuButton\"\n              data-toggle=\"dropdown\"\n              aria-haspopup=\"true\"\n              aria-expanded=\"false\"\n            >\n              {distName}\n            </button>\n            <div className=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton\">\n              <div\n                className=\"dropdown-item\"\n                onClick={(e) => setDistSelected(1)}\n              >\n                Uniforme\n              </div>\n              <div\n                className=\"dropdown-item\"\n                onClick={(e) => setDistSelected(2)}\n              >\n                Exponencial\n              </div>\n              <div\n                className=\"dropdown-item\"\n                onClick={(e) => setDistSelected(3)}\n              >\n                Bernoulli\n              </div>\n              <div\n                className=\"dropdown-item\"\n                onClick={(e) => setDistSelected(4)}\n              >\n                Poisson\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* UNIFORME */}\n      {distSelected === 1 && (\n        <div>\n          <div>\n            <h3 className=\"col-12\">{distFormulaStr}</h3>\n          </div>\n          <div className=\"col-8 form-group\">\n            <div className=\"input-group mb-3\">\n              <h3>a: </h3>\n\n              <input\n                type=\"number\"\n                min=\"100\"\n                max=\"999999\"\n                onChange={(e) => setUniVarA(e.target.value * 1)}\n              />\n            </div>\n\n            <div className=\"input-group mb-3\">\n              <h3>(b-a): </h3>\n              <input\n                type=\"number\"\n                min=\"100\"\n                max=\"999999\"\n                onChange={(e) => setUniVarBmA(e.target.value * 1)}\n              />\n            </div>\n\n            <div className=\"input-group mb-3\">\n              <div className=\"btn btn-primary\" onClick={(e) => calculate()}>\n                Calcular\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n      {display && distSelected === 1 && (\n        <table className=\"table\">\n          <thead>\n            <tr>\n              <th scope=\"col\">#</th>\n              <th scope=\"col\">Ri</th>\n              <th scope=\"col\">Xi</th>\n            </tr>\n          </thead>\n          <tbody>\n            {uniResults.map((e, k) => {\n              return (\n                <tr scope=\"row\" key={k}>\n                  <td>{k + 1}</td>\n                  <td>{e.ri}</td>\n                  <td>{e.xi.toFixed(2)}</td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n      )}\n      {/* EXPONENCIAL */}\n      {distSelected === 2 && (\n        <div>\n          <div>\n            <h3 className=\"col-12\">{distFormulaStr}</h3>\n          </div>\n          <div className=\"col-8 form-group\">\n            <div className=\"input-group mb-3\">\n              <h3>𝜆 : </h3>\n              <input\n                type=\"number\"\n                min=\"100\"\n                max=\"999999\"\n                onChange={(e) => setExpVarDelta(e.target.value * 1)}\n              />\n            </div>\n\n            <div className=\"input-group mb-3\">\n              <div className=\"btn btn-primary\" onClick={(e) => calculate()}>\n                Calcular\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n      {display && distSelected === 2 && (\n        <table className=\"table\">\n          <thead>\n            <tr>\n              <th scope=\"col\">#</th>\n              <th scope=\"col\">Ri</th>\n              <th scope=\"col\">Xi</th>\n            </tr>\n          </thead>\n          <tbody>\n            {expResults.map((e, k) => {\n              return (\n                <tr scope=\"row\" key={k}>\n                  <td>{k + 1}</td>\n                  <td>{e.ri}</td>\n                  <td>{e.xi.toFixed(2)}</td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n      )}\n      {/* BERNOULLI */}\n      {distSelected === 3 && (\n        <div>\n          <div>\n            <h3 className=\"col-12\">{distFormulaStr}</h3>\n          </div>\n          <div className=\"col-8 form-group\">\n            <div className=\"input-group mb-3\">\n              <h3>P(Probabilidad de exito): </h3>\n              <input\n                type=\"number\"\n                onChange={(e) => setBerVarSuccess(e.target.value * 1)}\n              />\n            </div>\n\n            <div className=\"input-group mb-3\">\n              <div className=\"btn btn-primary\" onClick={(e) => calculate()}>\n                Calcular\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n      {display && distSelected === 3 && (\n        <table className=\"table\">\n          <thead>\n            <tr>\n              <th scope=\"col\">#</th>\n              <th scope=\"col\">Ri</th>\n              <th scope=\"col\">Xi</th>\n            </tr>\n          </thead>\n          <tbody>\n            {berResults.map((e, k) => {\n              return (\n                <tr scope=\"row\" key={k}>\n                  <td>{k + 1}</td>\n                  <td>{e.ri}</td>\n                  <td>{e.xi}</td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n      )}\n      {/* POISSON */}\n      {distSelected === 4 && (\n        <div>\n          <div>\n            <h3 className=\"col-12\">{distFormulaStr}</h3>\n          </div>\n          <div className=\"col-6 form-group\">\n            <div className=\"input-group mb-3\">\n              <h3>𝜆 : </h3>\n\n              <input\n                type=\"number\"\n                onChange={(e) => setPoiVarDelta(e.target.value * 1)}\n              />\n            </div>\n\n            <h4>N(Numero de probabilidades a calcular) : </h4>\n            <div className=\"input-group mb-3\">\n              <input\n                type=\"number\"\n                onChange={(e) => setPoiVarProbSize(e.target.value * 1)}\n              />\n            </div>\n\n            <div className=\"input-group mb-3\">\n              <div className=\"btn btn-primary\" onClick={(e) => calculate()}>\n                Calcular\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n      {display && distSelected === 4 && (\n        <table className=\"table\">\n          <thead>\n            <tr>\n              <th scope=\"col\">#</th>\n              <th scope=\"col\">Ri</th>\n              <th scope=\"col\">Xi</th>\n            </tr>\n          </thead>\n          <tbody>\n            {poiResults.map((e, k) => {\n              return (\n                <tr scope=\"row\" key={k}>\n                  <td>{k + 1}</td>\n                  <td>{e.ri}</td>\n                  <td>{e.xi}</td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n      )}\n    </div>\n  );\n};\n\nexport default MetodoTransformadaInversa;\n\n/*\nUNI\n0.48,\n0.82,\n0.69,\n0.67,\n0\nEXP\n0.64,\n0.83,\n0.03,\n0.50,\n0.21\nBER\n0.453,\n0.823,\n0.034,\n0.503,\n0.891\nPOISSON\n0.6754,\n0.0234,\n0.7892,\n0.5134,\n0.3331\n*/\n","import React from \"react\";\nimport \"./styles/App.scss\";\nimport Header from \"./components/header\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\nimport TypeSelector from \"./components/typeSelector\";\nimport AlgoritmoCuadradosMedios from \"./components/algoritmos/algoritmoCuadradosMedios\";\nimport AlgoritmoMultiplicadorConstante from \"./components/algoritmos/algoritmoMultiplicadorConstante\";\nimport AlgoritmoLineal from \"./components/algoritmos/algoritmoLineal\";\nimport AlgoritmoCongruencialMultiplicativo from \"./components/algoritmos/algortimoCongruencialMultiplicativo\";\nimport AlgoritmoCongruencialAditivo from \"./components/algoritmos/algortimoCongruencialAditivo\";\nimport AlgoritmoCongruencialCuadratico from \"./components/algoritmos/algortimoCongruencialCuadratico\";\nimport AlgoritmoProductosMedios from \"./components/algoritmos/algoritmoProductosMedios\";\nimport PruebaDstrbcnChiCdrd from \"./components/pruebas/pruebaDistChiCuad\";\nimport PruebaVarianza from \"./components/pruebas/pruebaVarianza\";\nimport PruebaUnidormidadChiCuadrada from \"./components/pruebas/pruebaUniformidadChiCuadrada\";\nimport PruebaHuecos from \"./components/pruebas/pruebaHuecos\";\nimport PruebaCorrArrAbMed from \"./components/pruebas/pruebaIndCorrArrAbMed\";\nimport PruebaIndepCorrArrAb from \"./components/pruebas/pruebaIndepCorrArrAb\";\nimport PruebaKolSmir from \"./components/pruebas/pruebaKolSmir\";\nimport PruebaMedias from \"./components/pruebas/pruebaMedias\";\nimport PruebaPoker from \"./components/pruebas/pruebaPoker\";\nimport PruebaSerie from \"./components/pruebas/pruebaSeries\";\nimport PruebaUniformidadKolSmir from \"./components/pruebas/pruebaUniformidadKolSmir\";\nimport MetodoConvolucion from \"./components/metodos/metodoConvolucion\";\nimport MetodoTransformadaInversa from \"./components/metodos/metodoTransformadaInversa\";\n\nfunction App() {\n  return (\n    <Router>\n      <Header />\n      <TypeSelector />\n      <div className=\"body\">\n        <Switch>\n          <div className=\"container rest-body\">\n            <Route exact path=\"/proyecto-simulacion/algoritmo-cuadrados-medios\">\n              <AlgoritmoCuadradosMedios />\n            </Route>\n            <Route exact path=\"/proyecto-simulacion/algoritmo-productos-medios\">\n              <AlgoritmoProductosMedios />\n            </Route>\n            <Route\n              exact\n              path=\"/proyecto-simulacion/algoritmo-multiplicador-constante\"\n            >\n              <AlgoritmoMultiplicadorConstante />\n            </Route>\n            <Route exact path=\"/proyecto-simulacion/algoritmo-lineal\">\n              <AlgoritmoLineal />\n            </Route>\n            <Route\n              exact\n              path=\"/proyecto-simulacion/algoritmo-congruencial-multiplicativo\"\n            >\n              <AlgoritmoCongruencialMultiplicativo />\n            </Route>\n            <Route\n              exact\n              path=\"/proyecto-simulacion/algoritmo-congruencial-aditivo\"\n            >\n              <AlgoritmoCongruencialAditivo />\n            </Route>\n            <Route\n              exact\n              path=\"/proyecto-simulacion/algoritmo-congruencial-cuadratico\"\n            >\n              <AlgoritmoCongruencialCuadratico />\n            </Route>\n            <Route exact path=\"/proyecto-simulacion/pruebas-medias\">\n              <PruebaMedias />\n            </Route>\n            <Route exact path=\"/proyecto-simulacion/prueba-varianza\">\n              <PruebaVarianza />\n            </Route>\n            <Route\n              exact\n              path=\"/proyecto-simulacion/prueba-uniformidad-chi-cuadrada\"\n            >\n              <PruebaUnidormidadChiCuadrada />\n            </Route>\n            <Route\n              exact\n              path=\"/proyecto-simulacion/pruba-uniformidad-kolmogorov-smirnov\"\n            >\n              <PruebaUniformidadKolSmir />\n            </Route>\n            <Route\n              exact\n              path=\"/proyecto-simulacion/prueba-independencia-corridas-arriba-abajo\"\n            >\n              <PruebaIndepCorrArrAb />\n            </Route>\n            <Route\n              exact\n              path=\"/proyecto-simulacion/prueba-independencia-corridas-arriba-abajo-media\"\n            >\n              <PruebaCorrArrAbMed />\n            </Route>\n            <Route exact path=\"/proyecto-simulacion/prueba-poker\">\n              <PruebaPoker />\n            </Route>\n            <Route exact path=\"/proyecto-simulacion/prueba-series\">\n              <PruebaSerie />\n            </Route>\n            <Route exact path=\"/proyecto-simulacion/prueba-huecos\">\n              <PruebaHuecos />\n            </Route>\n            <Route\n              exact\n              path=\"/proyecto-simulacion/prueba-distribucion-chi-cuadrada\"\n            >\n              <PruebaDstrbcnChiCdrd />\n            </Route>\n            <Route exact path=\"/proyecto-simulacion/prueba-kolmogorov-smirnov\">\n              <PruebaKolSmir />\n            </Route>\n            <Route\n              exact\n              path=\"/proyecto-simulacion/metodo-transformada-inversa\"\n            >\n              <MetodoTransformadaInversa />\n            </Route>\n            <Route exact path=\"/proyecto-simulacion/metodo-convolucion\">\n              <MetodoConvolucion />\n            </Route>\n          </div>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","const getMiddleValues = (num, d) =>{\n    let numString = num.toString();\n    numString = (numString.length - d)%2 == 0 ? '' +numString : '0' +numString;\n    let stringLength = Math.floor((numString.length-d)/2);\n    let finalString = numString.slice(stringLength, stringLength+d);\n    return finalString;\n}\n\nconst transformToR = (x, d) => (x*Math.pow(10,-d)).toFixed(d);\n\nmodule.exports = {getMiddleValues, transformToR};"],"sourceRoot":""}